import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as s,c as r,a as e,b as l,d as o,w as n,e as d}from"./app-39581384.js";const h={},u=e("h1",{id:"imodeldecorationoptions",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#imodeldecorationoptions","aria-hidden":"true"},"#"),l(" IModelDecorationOptions")],-1),_=e("code",null,"interface",-1),f={href:"https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IModelDecorationOptions.html",target:"_blank",rel:"noopener noreferrer"},m=e("h2",{id:"属性-properties",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#属性-properties","aria-hidden":"true"},"#"),l(" 属性 Properties")],-1),g=e("h3",{id:"after",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#after","aria-hidden":"true"},"#"),l(" after")],-1),p=e("code",null,"可选",-1),b=e("li",null,[l("默认值： "),e("code",null,"-")],-1),x=e("li",null,[l("可选项： "),e("code",null,"-")],-1),k=e("li",null,"描述：如果设置，文本将在范围后的视图中插入。",-1),M=d('<h3 id="aftercontentclassname" tabindex="-1"><a class="header-anchor" href="#aftercontentclassname" aria-hidden="true">#</a> afterContentClassName</h3><ul><li>类型： <code>string</code> <code>可选</code></li><li>默认值： <code>null</code></li><li>可选项： <code>-</code></li><li>描述：一个CSS类名，用于在内容之后呈现附加内容的容器。</li></ul><h3 id="before" tabindex="-1"><a class="header-anchor" href="#before" aria-hidden="true">#</a> before</h3>',3),I=e("code",null,"可选",-1),S=e("li",null,[l("默认值： "),e("code",null,"null")],-1),w=e("li",null,[l("可选项： "),e("code",null,"-")],-1),C=e("li",null,"描述：一个装饰器，用于在内容之前呈现附加内容。",-1),v=d('<h3 id="beforecontentclassname" tabindex="-1"><a class="header-anchor" href="#beforecontentclassname" aria-hidden="true">#</a> beforeContentClassName</h3><ul><li>类型： <code>string</code> <code>可选</code></li><li>默认值： <code>null</code></li><li>可选项： <code>-</code></li><li>描述：一个CSS类名，用于在内容之前呈现附加内容的容器。</li></ul><h3 id="blockclassname" tabindex="-1"><a class="header-anchor" href="#blockclassname" aria-hidden="true">#</a> blockClassName</h3><ul><li>类型： <code>string</code> <code>可选</code></li><li>默认值： <code>null</code></li><li>可选项： <code>-</code></li><li>描述：一个CSS类名，用于在内容周围呈现一个块装饰器。</li></ul><h3 id="blockdoesnotcollapse" tabindex="-1"><a class="header-anchor" href="#blockdoesnotcollapse" aria-hidden="true">#</a> blockDoesNotCollapse</h3><ul><li>类型： <code>boolean</code> <code>可选</code></li><li>默认值： <code>false</code></li><li>可选项： <code>-</code></li><li>描述：一个布尔值，表示块装饰器是否不应折叠。</li></ul><h3 id="blockisafterend" tabindex="-1"><a class="header-anchor" href="#blockisafterend" aria-hidden="true">#</a> blockIsAfterEnd</h3><ul><li>类型： <code>boolean</code> <code>可选</code></li><li>默认值： <code>false</code></li><li>可选项： <code>-</code></li><li>描述：一个布尔值，表示块装饰器是否在内容的末尾之后呈现。</li></ul><h3 id="blockpadding" tabindex="-1"><a class="header-anchor" href="#blockpadding" aria-hidden="true">#</a> blockPadding</h3><ul><li>类型： <code>[top: number, right: number, bottom: number, left: number]</code> <code>可选</code></li><li>默认值： <code>null</code></li><li>可选项： <code>-</code></li><li>描述：一个装饰器，用于在块装饰器与内容之间呈现填充。</li></ul><h3 id="classname" tabindex="-1"><a class="header-anchor" href="#classname" aria-hidden="true">#</a> className</h3><ul><li>类型： <code>string</code> <code>可选</code></li><li>默认值： <code>null</code></li><li>可选项： <code>-</code></li><li>描述：一个CSS类名，用于应用于此装饰器。</li></ul><h3 id="firstlinedecorationclassname" tabindex="-1"><a class="header-anchor" href="#firstlinedecorationclassname" aria-hidden="true">#</a> firstLineDecorationClassName</h3><ul><li>类型： <code>string</code> <code>可选</code></li><li>默认值： <code>null</code></li><li>可选项： <code>-</code></li><li>描述：一个CSS类名，用于在第一行上呈现的装饰器。</li></ul><h3 id="glyphmargin" tabindex="-1"><a class="header-anchor" href="#glyphmargin" aria-hidden="true">#</a> glyphMargin</h3>',15),y=e("code",null,"可选",-1),O=e("li",null,[l("默认值： "),e("code",null,"null")],-1),N=e("li",null,[l("可选项： "),e("code",null,"-")],-1),D=e("li",null,"描述：一个装饰器，用于在行号旁边呈现图标。如果已设置并且装饰已设置 glyphMarginClassName，则在字形边距中使用指定的 IModelDecorationGlyphMarginOptions 渲染此装饰。",-1),T=d('<h3 id="glyphmarginclassname" tabindex="-1"><a class="header-anchor" href="#glyphmarginclassname" aria-hidden="true">#</a> glyphMarginClassName</h3><ul><li>类型： <code>string</code> <code>可选</code></li><li>默认值： <code>null</code></li><li>可选项： <code>-</code></li><li>描述：一个CSS类名，用于应用于行号旁边呈现的图标的容器。</li></ul><h3 id="glyphmarginhovermessage" tabindex="-1"><a class="header-anchor" href="#glyphmarginhovermessage" aria-hidden="true">#</a> glyphMarginHoverMessage</h3>',3),L=e("code",null,"可选",-1),E=e("li",null,[l("默认值： "),e("code",null,"null")],-1),G=e("li",null,[l("可选项： "),e("code",null,"-")],-1),R=e("li",null,"描述：一个悬停消息，当鼠标悬停在行号旁边呈现的图标上时显示。",-1),A=e("h3",{id:"hovermessage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#hovermessage","aria-hidden":"true"},"#"),l(" hoverMessage")],-1),j=e("code",null,"可选",-1),B=e("li",null,[l("默认值： "),e("code",null,"null")],-1),V=e("li",null,[l("可选项： "),e("code",null,"-")],-1),W=e("li",null,"描述：一个悬停消息，当鼠标悬停在装饰器上时显示。",-1),z=d('<h3 id="inlineclassname" tabindex="-1"><a class="header-anchor" href="#inlineclassname" aria-hidden="true">#</a> inlineClassName</h3><ul><li>类型： <code>string</code> <code>可选</code></li><li>默认值： <code>null</code></li><li>可选项： <code>-</code></li><li>描述：一个CSS类名，用于在内容内呈现的装饰器。</li></ul><h3 id="inlineclassnameaffectsletterspacing" tabindex="-1"><a class="header-anchor" href="#inlineclassnameaffectsletterspacing" aria-hidden="true">#</a> inlineClassNameAffectsLetterSpacing</h3><ul><li>类型： <code>boolean</code> <code>可选</code></li><li>默认值： <code>false</code></li><li>可选项： <code>-</code></li><li>描述：一个布尔值，表示内联装饰器是否应影响字间距。</li></ul><h3 id="iswholeline" tabindex="-1"><a class="header-anchor" href="#iswholeline" aria-hidden="true">#</a> isWholeLine</h3><ul><li>类型： <code>boolean</code> <code>可选</code></li><li>默认值： <code>false</code></li><li>可选项： <code>-</code></li><li>描述：一个布尔值，表示装饰器是否应覆盖整行。</li></ul><h3 id="linesdecorationsclassname" tabindex="-1"><a class="header-anchor" href="#linesdecorationsclassname" aria-hidden="true">#</a> linesDecorationsClassName</h3><ul><li>类型： <code>string</code> <code>可选</code></li><li>默认值： <code>null</code></li><li>可选项： <code>-</code></li><li>描述：一个CSS类名，用于在整行上呈现的装饰器。</li></ul><h3 id="marginclassname-边距类名" tabindex="-1"><a class="header-anchor" href="#marginclassname-边距类名" aria-hidden="true">#</a> marginClassName（边距类名）</h3><ul><li>类型: <code>string</code> <code>可选</code></li><li>默认值: <code>-</code></li><li>可选项: <code>-</code></li><li>描述: <code>用于在编辑器的边距处添加自定义类名的选项。</code></li></ul><h3 id="minimap-缩略图" tabindex="-1"><a class="header-anchor" href="#minimap-缩略图" aria-hidden="true">#</a> minimap（缩略图）</h3>',11),P=e("code",null,"可选",-1),H=e("li",null,[l("默认值: "),e("code",null,"-")],-1),q=e("li",null,[l("可选项: "),e("code",null,"-")],-1),F=e("li",null,[l("描述: "),e("code",null,"用于在编辑器的缩略图上添加自定义选项的选项。")],-1),J=e("h3",{id:"overviewruler-概览标尺",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overviewruler-概览标尺","aria-hidden":"true"},"#"),l(" overviewRuler（概览标尺）")],-1),K=e("code",null,"可选",-1),Q=e("li",null,[l("默认值: "),e("code",null,"-")],-1),U=e("li",null,[l("可选项: "),e("code",null,"-")],-1),X=e("li",null,[l("描述: "),e("code",null,"用于在编辑器的概览标尺上添加自定义选项的选项。")],-1),Y=d('<h3 id="showifcollapsed-折叠时显示" tabindex="-1"><a class="header-anchor" href="#showifcollapsed-折叠时显示" aria-hidden="true">#</a> showIfCollapsed（折叠时显示）</h3><ul><li>类型: <code>boolean</code> <code>可选</code></li><li>默认值: <code>-</code></li><li>可选项: <code>-</code></li><li>描述: <code>用于在代码折叠时添加自定义选项的选项。</code></li></ul><h3 id="stickiness-粘性" tabindex="-1"><a class="header-anchor" href="#stickiness-粘性" aria-hidden="true">#</a> stickiness（粘性）</h3>',3),Z=e("code",null,"可选",-1),$=e("li",null,[l("默认值: "),e("code",null,"-")],-1),ee=e("li",null,[l("可选项: "),e("code",null,"1. AlwaysGrowsWhenTypingAtEdges 2. NeverGrowsWhenTypingAtEdges 3. GrowsOnlyWhenTypingBefore")],-1),le=e("li",null,[l("描述: "),e("code",null,"用于指定在编辑器中添加自定义选项时跟踪范围的行为。")],-1),oe=d('<h3 id="zindex-层级" tabindex="-1"><a class="header-anchor" href="#zindex-层级" aria-hidden="true">#</a> zIndex（层级）</h3><ul><li>类型: <code>number</code> <code>可选</code></li><li>默认值: <code>-</code></li><li>可选项: <code>-</code></li><li>描述: <code>用于指定添加自定义选项时的层级顺序。</code></li></ul>',2);function ie(ne,de){const c=a("ExternalLinkIcon"),i=a("RouterLink");return s(),r("div",null,[u,e("p",null,[_,l(),e("a",f,[l("官网地址"),o(c)])]),m,g,e("ul",null,[e("li",null,[l("类型： "),o(i,{to:"/editor/interfaces/InjectedTextOptions.html"},{default:n(()=>[l("InjectedTextOptions")]),_:1}),l(),p]),b,x,k]),M,e("ul",null,[e("li",null,[l("类型： "),o(i,{to:"/editor/interfaces/InjectedTextOptions.html"},{default:n(()=>[l("InjectedTextOptions")]),_:1}),l(),I]),S,w,C]),v,e("ul",null,[e("li",null,[l("类型："),o(i,{to:"/editor/interfaces/IModelDecorationGlyphMarginOptions.html"},{default:n(()=>[l("IModelDecorationGlyphMarginOptions")]),_:1}),l(),y]),O,N,D]),T,e("ul",null,[e("li",null,[l("类型： "),o(i,{to:"/global/classes/IMarkdownString.html"},{default:n(()=>[l("IMarkdownString")]),_:1}),l(" | "),o(i,{to:"/global/classes/IMarkdownString.html"},{default:n(()=>[l("IMarkdownString")]),_:1}),l("[] "),L]),E,G,R]),A,e("ul",null,[e("li",null,[l("类型： "),o(i,{to:"/global/classes/IMarkdownString.html"},{default:n(()=>[l("IMarkdownString")]),_:1}),l(" | "),o(i,{to:"/global/classes/IMarkdownString.html"},{default:n(()=>[l("IMarkdownString")]),_:1}),l("[] "),j]),B,V,W]),z,e("ul",null,[e("li",null,[l("类型: "),o(i,{to:"/editor/interfaces/IModelDecorationMinimapOptions.html"},{default:n(()=>[l("editor.IModelDecorationMinimapOptions")]),_:1}),l(),P]),H,q,F]),J,e("ul",null,[e("li",null,[l("类型: "),o(i,{to:"/editor/interfaces/IModelDecorationOverviewRulerOptions.html"},{default:n(()=>[l("editor.IModelDecorationOverviewRulerOptions")]),_:1}),l(),K]),Q,U,X]),Y,e("ul",null,[e("li",null,[l("类型: "),o(i,{to:"/editor/enumerations.html#trackedrangestickiness"},{default:n(()=>[l("TrackedRangeStickiness")]),_:1}),l(),Z]),$,ee,le]),oe])}const te=t(h,[["render",ie],["__file","IModelDecorationOptions.html.vue"]]);export{te as default};
