import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as r,c as i,a as s,b as n,d as a,w as e,e as o}from"./app-39581384.js";const c={},D=s("h1",{id:"编辑器-editor",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#编辑器-editor","aria-hidden":"true"},"#"),n(" 编辑器(editor)")],-1),d=s("p",null,"编辑器的方法和实例的方法：",-1),y=s("h2",{id:"addcommand",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#addcommand","aria-hidden":"true"},"#"),n(" addCommand")],-1),u=s("li",null,[s("p",null,[n("语法: "),s("code",null,"addCommand(descriptor: ICommandDescriptor): IDisposable")])],-1),C=s("p",null,"参数:",-1),m=s("code",null,"descriptor",-1),v=s("li",null,[s("p",null,[n("描述: "),s("code",null,"向编辑器命令服务添加命令处理器")]),s("p",null,"其中，commandId 参数是一个字符串，表示要添加的命令的 ID；handler 参数是一个 ICommandHandler 类型的函数，表示要添加的命令处理器；context 参数是一个字符串，表示要添加的命令的上下文。addCommand 方法返回一个字符串，表示添加的命令的 ID。 示例：")],-1),E=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addCommand</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">KeyMod</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">CtrlCmd</span><span style="color:#D4D4D4;"> | </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">KeyCode</span><span style="color:#D4D4D4;">.</span><span style="color:#4FC1FF;">KEY_S</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">run</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Save command triggered&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">})</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="addeditoraction" tabindex="-1"><a class="header-anchor" href="#addeditoraction" aria-hidden="true">#</a> addEditorAction</h2>`,2),h=s("li",null,[n("语法: "),s("code",null,"addEditorAction(descriptor: IActionDescriptor): IDisposable")],-1),b=s("code",null,"descriptor",-1),g=s("li",null,[n("描述: "),s("code",null,"向编辑器添加自定义的动作")],-1),F=o(`<p>其中，action 参数是一个 IAction 对象，用来描述要添加的动作。addEditorAction 方法返回一个 IDisposable 对象，用来取消添加的动作。 示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">editor</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;plaintext&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">action</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;my-action&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">label:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;My Action&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">run</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;My Action triggered&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addEditorAction</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">action</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="addkeybindingrule" tabindex="-1"><a class="header-anchor" href="#addkeybindingrule" aria-hidden="true">#</a> addKeybindingRule</h2>`,3),_=s("code",null,"rule",-1),f=s("li",null,[n("描述: "),s("code",null,"向编辑器添加自定义的按键绑定规则")],-1),I=o(`<p>addKeybindingRule 示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">editor</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;plaintext&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">rule</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">command:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;my-rule&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">when:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">undefined</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addKeybindingRule</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">rule</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="addkeybindingrules" tabindex="-1"><a class="header-anchor" href="#addkeybindingrules" aria-hidden="true">#</a> addKeybindingRules</h2>`,3),A=s("li",null,[n("语法: "),s("code",null,"addKeybindingRules(rules: IKeybindingRule[]): IDisposable")],-1),k=s("code",null,"rules",-1),x=s("li",null,[n("描述: "),s("code",null,"向编辑器添加多个自定义的按键绑定规则")],-1),M=o(`<p>其中，rules 参数是一个 IKeybindingRule 数组，用来描述要添加的按键绑定规则。addKeybindingRules 方法返回一个 IDisposable 对象，用来取消添加的按键绑定规则。 示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">editor</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;plaintext&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">rules</span><span style="color:#D4D4D4;"> = [</span></span>
<span class="line"><span style="color:#D4D4D4;">    {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">command:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;my-rule&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">when:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">undefined</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">    {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">command:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;my-rule&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">when:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">undefined</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">addKeybindingRules</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">rules</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="colorize" tabindex="-1"><a class="header-anchor" href="#colorize" aria-hidden="true">#</a> colorize</h2>`,3),T=s("li",null,[n("语法: "),s("code",null,"colorize(text: string, languageId: string, options: IColorizerOptions): Promise<string>")],-1),j=s("li",null,[n("text: "),s("code",null,"string")],-1),O=s("li",null,[n("languageId: "),s("code",null,"string")],-1),z=s("li",null,[n("返回值: "),s("code",null,"Promise")],-1),L=s("li",null,[n("描述: "),s("code",null,"对指定的文本进行语法高亮处理")],-1),W=o(`<p>其中，text 参数是一个字符串，表示要进行语法高亮处理的文本；languageId 参数是一个字符串，表示要进行语法高亮处理的文本的 language id；options 参数是一个 IColorizerOptions 对象，表示语法高亮处理的选项。colorize 方法返回一个 Promise 对象，表示语法高亮处理的结果。</p><p>示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">text</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;function add(a, b) { return a + b; }&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">colorize</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">text</span><span style="color:#D4D4D4;">, ‘</span><span style="color:#9CDCFE;">javascript</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">tabSize:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#D4D4D4;">    }).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">html</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">html</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">    });</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="colorizeelement" tabindex="-1"><a class="header-anchor" href="#colorizeelement" aria-hidden="true">#</a> colorizeElement</h2>`,4),S=s("li",null,[n("语法: "),s("code",null,"colorizeElement(element: HTMLElement, options?: IColorizerElementOptions): Promise")],-1),N=s("li",null,[n("element: "),s("code",null,"HTMLElement")],-1),B=s("li",null,[n("返回值: "),s("code",null,"Promise")],-1),w=s("li",null,[n("描述: "),s("code",null,"对指定的 HTML 元素进行语法高亮处理")],-1),R=o(`<p>其中，element 参数是一个 HTMLElement 对象，表示要进行语法高亮处理的 HTML 元素；options 参数是一个 IColorizerElementOptions 对象，表示语法高亮处理的选项。colorizeElement 方法返回一个 Promise 对象，表示语法高亮处理的结果。 示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;code&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">function add(a, b) </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;"> + </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">element</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;code&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">colorizeElement</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">element</span><span style="color:#D4D4D4;">, { </span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">mimeType:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;text/javascript&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">theme</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;vs-dark&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">tabSize:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">4</span></span>
<span class="line"><span style="color:#D4D4D4;">    }).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Element colorized&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="colorizemodelline" tabindex="-1"><a class="header-anchor" href="#colorizemodelline" aria-hidden="true">#</a> colorizeModelLine</h2>`,3),K=s("li",null,[n("语法: "),s("code",null,"colorizeModelLine(model: ITextModel, lineNumber: number, tabSize?: number): string")],-1),U=s("li",null,[n("lineNumber: "),s("code",null,"number")],-1),H=s("li",null,[n("tabSize: "),s("code",null,"number"),n(),s("code",null,"可选")],-1),V=s("li",null,[n("返回值: "),s("code",null,"string")],-1),P=s("li",null,[n("描述: "),s("code",null,"对指定的文本模型的指定行进行语法高亮处理")],-1),q=o(`<p>其中，model 参数是一个 ITextModel 对象，表示要进行语法高亮处理的文本模型；lineNumber 参数是一个数字，表示要进行语法高亮处理的行号；tabSize 参数是一个数字，表示制表符的宽度。colorizeModelLine 方法返回一个字符串，表示语法高亮处理的结果。 示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">model</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createModel</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;function add(a, b) { return a + b; }&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;text/javascript&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">html</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">colorizeModelLine</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">html</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="create" tabindex="-1"><a class="header-anchor" href="#create" aria-hidden="true">#</a> create</h2>`,3),Y=s("li",null,[n("语法: "),s("code",null,"create(domElement: HTMLElement, options?: IEditorConstructionOptions, override?: IEditorOverrideServices): IStandaloneCodeEditor")],-1),G=s("li",null,"domElement: HTMLElement",-1),J=s("code",null,"可选",-1),Q=s("code",null,"可选",-1),X=s("li",null,[n("描述: "),s("code",null,"创建一个新的独立的编辑器实例")],-1),Z=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;container&quot;</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">domElement</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">options</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function add(a, b) { return a + b; }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;javascript&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">editor</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">domElement</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getValue</span><span style="color:#D4D4D4;">());</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="creatediffeditor" tabindex="-1"><a class="header-anchor" href="#creatediffeditor" aria-hidden="true">#</a> createDiffEditor</h2>`,2),$=s("li",null,[n("语法: "),s("code",null,"createDiffEditor(domElement: HTMLElement, options?: IDiffEditorConstructionOptions, override?: IEditorOverrideServices): IStandaloneDiffEditor")],-1),ss=s("li",null,"domElement: HTMLElement",-1),ns=s("code",null,"可选",-1),ls=s("code",null,"可选",-1),as=s("li",null,[n("描述: "),s("code",null,"创建一个新的独立的差异编辑器实例")],-1),es=o(`<p>其中，domElement 参数是一个 HTMLElement 对象，表示要将差异编辑器实例附加到的 DOM 元素；options 参数是一个 IDiffEditorConstructionOptions 对象，表示要创建的差异编辑器实例的选项；override 参数是一个 IEditorOverrideServices 对象，表示要覆盖的编辑器服务。createDiffEditor 方法返回一个 IDiffEditor 对象，表示创建的差异编辑器实例。 示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;container&quot;</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">domElement</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">options</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">original:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function add(a, b) { return a + b; }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;javascript&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">modified:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function add(a, b){ return a + b; }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;javascript&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">editor</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createDiffEditor</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">domElement</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getOriginalEditor</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">getValue</span><span style="color:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getModifiedEditor</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">getValue</span><span style="color:#D4D4D4;">());</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="creatediffnavigator" tabindex="-1"><a class="header-anchor" href="#creatediffnavigator" aria-hidden="true">#</a> createDiffNavigator</h2>`,3),os=s("li",null,[n("语法: "),s("code",null,"createDiffNavigator(diffEditor: IDiffEditor, opts?: IDiffNavigatorOptions): IDiffNavigator")],-1),ps=s("code",null,"可选",-1),ts=s("li",null,[n("描述: "),s("code",null,"创建一个新的差异导航器实例")],-1),rs=o(`<p>其中，diffEditor 参数是一个 IDiffEditor 对象，表示要创建差异导航器实例的差异编辑器实例；opts 参数是一个 IDiffNavigatorOptions 对象，表示要创建的差异导航器实例的选项。createDiffNavigator 方法返回一个 IDiffNavigator 对象，表示创建的差异导航器实例。</p><p>示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">domElement</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">options</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">original:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function add(a, b) { return a + b; }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;javascript&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">modified:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function add(a, b) { return a - b; }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;javascript&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">editor</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createDiffEditor</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">domElement</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">navigator</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createDiffNavigator</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">navigator</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">next</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="createmodel" tabindex="-1"><a class="header-anchor" href="#createmodel" aria-hidden="true">#</a> createModel</h2>`,4),is=s("li",null,[n("语法: "),s("code",null,"createModel(value: string, language?: string, uri?: Uri): ITextModel")],-1),cs=s("li",null,[n("value: "),s("code",null,"string")],-1),Ds=s("li",null,[n("language: "),s("code",null,"string"),n(),s("code",null,"可选")],-1),ds=s("code",null,"可选",-1),ys=s("li",null,[n("描述: "),s("code",null,"创建一个新的文本模型实例")],-1),us=o(`<p>其中，value 参数是一个字符串，表示要创建的文本模型的初始值；language 参数是一个字符串，表示要创建的文本模型的语言；uri 参数是一个 Uri 对象，表示要创建的文本模型的 URI。createModel 方法返回一个 ITextModel 对象，表示创建的文本模型实例。 示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">model</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createModel</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;function add(a, b) { return a + b; }&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;text/javascript&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getValue</span><span style="color:#D4D4D4;">());</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="createwebworker" tabindex="-1"><a class="header-anchor" href="#createwebworker" aria-hidden="true">#</a> createWebWorker</h2>`,3),Cs=s("li",null,[n("语法: "),s("code",null,"createWebWorker(opts: IWebWorkerOptions): MonacoWebWorker")],-1),ms=s("li",null,[n("描述: "),s("code",null,"创建一个新的 Web Worker 实例")],-1),vs=o(`<p>其中，opts 参数是一个 IWebWorkerOptions 对象，表示要创建的 Web Worker 实例的选项。createWebWorker 方法返回一个 MonacoWebWorker 对象，表示创建的 Web Worker 实例。 示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">worker</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createWebWorker</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">moduleId:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;myWorker&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">label:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;My Worker&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">createData:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">languageId:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;javascript&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">worker</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getProxy</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">proxy</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">proxy</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">doSomething</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="definetheme" tabindex="-1"><a class="header-anchor" href="#definetheme" aria-hidden="true">#</a> defineTheme</h2>`,3),Es=s("li",null,[n("语法: "),s("code",null,"defineTheme(themeName: string, themeData: IStandaloneThemeData): void")],-1),hs=s("li",null,[n("themeName: "),s("code",null,"string")],-1),bs=s("li",null,[n("返回值: "),s("code",null,"-")],-1),gs=s("li",null,[n("描述: "),s("code",null,"定义一个新的主题")],-1),Fs=o(`<p>其中，themeName 参数是一个字符串，表示要定义的主题的名称；themeData 参数是一个 IStandaloneThemeData 对象，表示要定义的主题的数据。defineTheme 方法没有返回值。 示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">defineTheme</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;my-theme&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">base:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;vs-dark&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">inherit:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">rules:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">        { </span><span style="color:#9CDCFE;">token:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;comment&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">foreground:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;ffa500&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">fontStyle:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;italic&#39;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">        { </span><span style="color:#9CDCFE;">token:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;keyword&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">foreground:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;00ff00&#39;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">        { </span><span style="color:#9CDCFE;">token:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;string&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">foreground:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;ff0000&#39;</span><span style="color:#D4D4D4;"> }</span></span>
<span class="line"><span style="color:#D4D4D4;">    ],</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">colors:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#CE9178;">&#39;editor.background&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#1e1e1e&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#CE9178;">&#39;editor.foreground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#d4d4d4&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#CE9178;">&#39;editorCursor.foreground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#d4d4d4&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#CE9178;">&#39;editor.lineHighlightBackground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#3c3c3c&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#CE9178;">&#39;editorLineNumber.foreground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#d4d4d4&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#CE9178;">&#39;editor.selectionBackground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#3c3c3c&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setTheme</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;my-theme&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="getdiffeditors" tabindex="-1"><a class="header-anchor" href="#getdiffeditors" aria-hidden="true">#</a> getDiffEditors</h2>`,3),_s=s("li",null,[n("语法: "),s("code",null,"getDiffEditors(): IDiffEditor[]")],-1),fs=s("li",null,[n("参数: "),s("code",null,"-")],-1),Is=s("li",null,[n("描述: "),s("code",null,"获取所有的差异编辑器实例")],-1),As=o(`<p>getDiffEditors 方法返回一个 IDiffEditor 数组，表示所有的差异编辑器实例。 示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">editor1</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container1&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function add(a, b) { return a + b; }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;javascript&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">editor2</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container2&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function sub(a, b) { return a - b; }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;javascript&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">diffEditor</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createDiffEditor</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container3&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">original:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">editor1</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getModel</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">modified:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">editor2</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getModel</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">editors</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getDiffEditors</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">editors</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="geteditors" tabindex="-1"><a class="header-anchor" href="#geteditors" aria-hidden="true">#</a> getEditors</h2>`,3),ks=s("li",null,[n("语法: "),s("code",null,"getEditors(): readonly ICodeEditor[]")],-1),xs=s("li",null,[n("参数: "),s("code",null,"-")],-1),Ms=s("li",null,[n("描述: "),s("code",null,"获取所有的编辑器实例")],-1),Ts=s("h2",{id:"getmodel",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#getmodel","aria-hidden":"true"},"#"),n(" getModel")],-1),js=s("li",null,[n("语法: "),s("code",null,"getModel(uri: Uri): ITextModel | null")],-1),Os=s("li",null,[n("描述: "),s("code",null,"根据指定的 URI 获取对应的文本模型实例"),n("如果不存在对应的文本模型实例，则返回 null。getModel 方法返回一个 ITextModel 对象或 null。 示例：")],-1),zs=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">uri</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">Uri</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">parse</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;file:///path/to/file.js&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">model</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getModel</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">uri</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getValue</span><span style="color:#D4D4D4;">());</span></span>
<span class="line"><span style="color:#D4D4D4;">} </span><span style="color:#C586C0;">else</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Model not found&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="getmodelmarkers" tabindex="-1"><a class="header-anchor" href="#getmodelmarkers" aria-hidden="true">#</a> getModelMarkers</h2>`,2),Ls=s("li",null,[n("语法: "),s("code",null,"getModelMarkers(filter: { owner?: string; resource?: Uri; take?: number; }): IMarker[]")],-1),Ws=s("li",null,[n("owner?: "),s("code",null,"string"),n(),s("code",null,"可选")],-1),Ss=s("code",null,"可选",-1),Ns=s("li",null,[n("take?: "),s("code",null,"number"),n(),s("code",null,"可选")],-1),Bs=s("li",null,[n("描述: "),s("code",null,"获取所有者和/或资源的标记")],-1),ws=s("h2",{id:"getmodels",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#getmodels","aria-hidden":"true"},"#"),n(" getModels")],-1),Rs=s("li",null,[n("语法: "),s("code",null,"getModels(): ITextModel[]")],-1),Ks=s("li",null,[n("参数: "),s("code",null,"-")],-1),Us=s("li",null,[n("描述: "),s("code",null,"获取所有的文本模型实例")],-1),Hs=o(`<p>getModels 方法返回一个 ITextModel 数组，表示所有的文本模型实例。 示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">model1</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createModel</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;function add(a, b) { return a + b; }&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;text/javascript&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">model2</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createModel</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;function sub(a, b) { return a - b; }&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;text/javascript&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">models</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getModels</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">models</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">length</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ondidchangemarkers" tabindex="-1"><a class="header-anchor" href="#ondidchangemarkers" aria-hidden="true">#</a> onDidChangeMarkers</h2>`,3),Vs=s("li",null,[n("语法: "),s("code",null,"onDidChangeMarkers(listener: ((e: readonly Uri[]) => void)): IDisposable")],-1),Ps=s("code",null,"只读",-1),qs=s("li",null,[n("返回值: "),s("code",null,"-")],-1),Ys=s("li",null,[n("描述: "),s("code",null,"当标记发生变化的时候触发")],-1),Gs=s("h2",{id:"ondidchangemodellanguage",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ondidchangemodellanguage","aria-hidden":"true"},"#"),n(" onDidChangeModelLanguage")],-1),Js=s("li",null,[n("语法: "),s("code",null,"onDidChangeModelLanguage(listener: ((e: { model: ITextModel; oldLanguage: string; }) => void)): IDisposable")],-1),Qs=s("p",null,"listener: ((e: { model: ITextModel; oldLanguage: string; }) => void)",-1),Xs=s("code",null,"只读",-1),Zs=s("li",null,[n("oldLanguage： "),s("code",null,"string")],-1),$s=s("li",null,[n("返回值: "),s("code",null,"IDisposable")],-1),sn=s("li",null,[n("描述: "),s("code",null,"当切换language时触发")],-1),nn=s("h2",{id:"ondidcreatediffeditor",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ondidcreatediffeditor","aria-hidden":"true"},"#"),n(" onDidCreateDiffEditor")],-1),ln=s("li",null,[n("语法: "),s("code",null,"onDidCreateDiffEditor(listener: ((diffEditor: IDiffEditor) => void)): IDisposable ")],-1),an=s("li",null,[n("返回值: "),s("code",null,"IDisposable")],-1),en=s("li",null,[n("描述: "),s("code",null,"创建diff编辑器时发出。")],-1),on=s("h2",{id:"ondidcreateeditor",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ondidcreateeditor","aria-hidden":"true"},"#"),n(" onDidCreateEditor")],-1),pn=s("li",null,[n("语法: "),s("code",null,"onDidCreateEditor(listener: ((codeEditor: ICodeEditor) => void)): IDisposable ")],-1),tn=s("li",null,[n("返回值: "),s("code",null,"IDisposable")],-1),rn=s("li",null,[n("描述: "),s("code",null,"创建编辑器时发出。创建diff编辑器可能会导致调用两次。")],-1),cn=s("h2",{id:"ondidcreatemodel",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#ondidcreatemodel","aria-hidden":"true"},"#"),n(" onDidCreateModel")],-1),Dn=s("li",null,[n("语法: "),s("code",null,"onDidCreateModel(listener: ((model: ITextModel) => void)): IDisposable")],-1),dn=s("li",null,[n("返回值: "),s("code",null,"IDisposable")],-1),yn=s("li",null,[n("描述: "),s("code",null,"当model创建之后触发")],-1),un=o('<h2 id="onwilldisposemodel" tabindex="-1"><a class="header-anchor" href="#onwilldisposemodel" aria-hidden="true">#</a> onWillDisposeModel</h2><ul><li>语法: <code>onWillDisposeModel(listener: ((model: ITextModel) =&gt; void)): IDisposable</code></li><li>参数: <code>listener: ((model: ITextModel) =&gt; void)</code></li><li>返回值: <code>IDisposable</code></li><li>描述: <code>取消model挂载之前触发</code></li></ul><h2 id="registercommand" tabindex="-1"><a class="header-anchor" href="#registercommand" aria-hidden="true">#</a> registerCommand</h2><ul><li>语法: <code>registerCommand(id: string, handler: ((accessor: any, ...args: any[]) =&gt; void)): IDisposable</code></li><li>参数: <ul><li>id： <code>string</code></li><li>handler： ((accessor: any, ...args: any[]) =&gt; void) <ul><li>accessor： any</li><li>...args: any[]</li></ul></li></ul></li><li>返回值: <code>IDisposable</code></li><li>描述: <code>注册一个命令</code></li></ul><h2 id="registereditoropener" tabindex="-1"><a class="header-anchor" href="#registereditoropener" aria-hidden="true">#</a> registerEditorOpener</h2>',5),Cn=s("li",null,[n("语法: "),s("code",null,"registerEditorOpener(opener: ICodeEditorOpener): IDisposable")],-1),mn=s("li",null,[n("返回值: "),s("code",null,"IDisposable")],-1),vn=s("li",null,[n("描述: "),s("code",null,"注册一个处理程序，当应在编辑器中打开当前模型以外的资源时调用该处理程序（例如“转到定义”）。如果请求已处理，则处理程序回调应返回 true，否则返回 false。 IDisposable可以再次取消注册开启者。 如果没有注册处理程序，则默认行为是对当前附加的模型以外的模型不执行任何操作。")],-1),En=s("h2",{id:"registerlinkopener",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#registerlinkopener","aria-hidden":"true"},"#"),n(" registerLinkOpener")],-1),hn=s("li",null,[n("语法: "),s("code",null,"registerLinkOpener(opener: ILinkOpener): IDisposable")],-1),bn=s("li",null,[n("返回值: "),s("code",null,"IDisposable")],-1),gn=s("li",null,[n("描述: "),s("code",null,"注册在任何编辑器中打开链接时调用的处理程序。如果链接已被处理，则处理程序回调应返回 true，否则返回 false。打开链接时，将最先调用最后注册的处理程序。")],-1),Fn=o('<h2 id="remeasurefonts" tabindex="-1"><a class="header-anchor" href="#remeasurefonts" aria-hidden="true">#</a> remeasureFonts</h2><ul><li>语法: <code>remeasureFonts(): void</code></li><li>参数: ``</li><li>返回值: <code>-</code></li><li>描述: <code>清除所有的字体缓存</code></li></ul><h2 id="removeallmarkers" tabindex="-1"><a class="header-anchor" href="#removeallmarkers" aria-hidden="true">#</a> removeAllMarkers</h2><ul><li>语法: <code>removeAllMarkers(owner: string): void</code></li><li>参数: ``</li><li>返回值: <code>-</code></li><li>描述: <code>移除所有的标记</code></li></ul><p>setModelMarkers setTheme tokenize</p><h2 id="setmodellanguage" tabindex="-1"><a class="header-anchor" href="#setmodellanguage" aria-hidden="true">#</a> setModelLanguage</h2>',6),_n=s("li",null,[n("语法: "),s("code",null,"setModelLanguage(model: ITextModel, mimeTypeOrLanguageId: string): void")],-1),fn=s("li",null,[n("mimeTypeOrLanguageId "),s("code",null,"string")],-1),In=s("li",null,[n("返回值: "),s("code",null,"-")],-1),An=s("li",null,[n("描述: "),s("code",null,"设置指定文本模型的语言"),n("setModelLanguage 方法没有返回值。 示例：")],-1),kn=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">model</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createModel</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;function add(a, b) { return a + b; }&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;text/javascript&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setModelLanguage</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getModeId</span><span style="color:#D4D4D4;">());</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="setmodelmarkers" tabindex="-1"><a class="header-anchor" href="#setmodelmarkers" aria-hidden="true">#</a> setModelMarkers</h2>`,2),xn=s("li",null,[n("语法: "),s("code",null,"setModelMarkers(model: ITextModel, owner: string, markers: IMarkerData[]): void")],-1),Mn=s("li",null,[n("owner: "),s("code",null,"string")],-1),Tn=s("li",null,[n("返回值: "),s("code",null,"-")],-1),jn=s("li",null,[n("描述: "),s("code",null,"设置指定文本模型的标记"),n("setModelMarkers 方法没有返回值。 示例：")],-1),On=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">model</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">createModel</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;function add(a, b) { return a + b; }&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;text/javascript&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">markers</span><span style="color:#D4D4D4;"> = [</span></span>
<span class="line"><span style="color:#D4D4D4;">    {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">startLineNumber:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">startColumn:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">endLineNumber:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">endColumn:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">message:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Function name should be in camel case&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">severity:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">MarkerSeverity</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">Warning</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setModelMarkers</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;myMarkerOwner&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">markers</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="settheme" tabindex="-1"><a class="header-anchor" href="#settheme" aria-hidden="true">#</a> setTheme</h2><ul><li>语法: <code>setTheme(themeName: string): void</code></li><li>参数: <ul><li>themeName: <code>string</code></li></ul></li><li>返回值: <code>-</code></li><li>描述: <code>设置当前使用的主题</code></li></ul><p>其中，themeName 参数是一个字符串，表示要设置的主题名称。setTheme 方法没有返回值。 示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setTheme</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;my-theme&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="tokenize" tabindex="-1"><a class="header-anchor" href="#tokenize" aria-hidden="true">#</a> tokenize</h2>`,6),zn=s("li",null,[n("语法: "),s("code",null,"tokenize(text: string, languageId: string): Token[]")],-1),Ln=s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("text: "),s("code",null,"string")]),s("li",null,[n("languageId: "),s("code",null,"string")])])],-1),Wn=s("li",null,[n("描述: "),s("code",null,"对指定的文本进行语法分析，返回一个 Token 数组")],-1),Sn=o(`<p>其中，text 参数是一个字符串，表示要进行语法分析的文本；languageId 参数是一个字符串，表示要使用的语言标识符。tokenize 方法返回一个 Token 数组，表示语法分析的结果。 示例：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">text</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;function add(a, b) { return a + b; }&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">languageId</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">tokens</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">tokenize</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">text</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">languageId</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">tokens</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function Nn(Bn,wn){const l=t("RouterLink");return r(),i("div",null,[D,d,y,s("ul",null,[u,s("li",null,[C,s("ul",null,[s("li",null,[m,n(", "),a(l,{to:"/editor/interfaces/ICommandDescriptor.html"},{default:e(()=>[n("ICommandDescriptor")]),_:1})])])]),s("li",null,[s("p",null,[n("返回值: "),a(l,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[n("IDisposable")]),_:1}),n(" 这个方法出现的次数会挺多次，作为已经绑定的command的解绑方法")])]),v]),E,s("ul",null,[h,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[b,n(": "),a(l,{to:"/editor/interfaces/IActionDescriptor.html"},{default:e(()=>[n("IActionDescriptor")]),_:1})])])]),s("li",null,[n("返回值: "),a(l,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[n("IDisposable")]),_:1})]),g]),F,s("ul",null,[s("li",null,[n("语法: addKeybindingRule(rule: "),a(l,{to:"/editor/interfaces/IKeybindingRule.html"},{default:e(()=>[n("IKeybindingRule")]),_:1}),n("): IDisposable")]),s("li",null,[n("参数: "),s("ul",null,[s("li",null,[_,n(": "),a(l,{to:"/editor/interfaces/IKeybindingRule.html"},{default:e(()=>[n("IKeybindingRule")]),_:1})])])]),s("li",null,[n("返回值: "),a(l,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[n("IDisposable")]),_:1})]),f]),I,s("ul",null,[A,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[k,n(),a(l,{to:"/editor/interfaces/IKeybindingRule.html"},{default:e(()=>[n("IKeybindingRule")]),_:1})])])]),s("li",null,[n("返回值: "),a(l,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[n("IDisposable")]),_:1})]),x]),M,s("ul",null,[T,s("li",null,[n("参数: "),s("ul",null,[j,O,s("li",null,[n("options: "),a(l,{to:"/editor/interfaces/IColorizerOptions.html"},{default:e(()=>[n("IColorizerOptions")]),_:1})])])]),z,L]),W,s("ul",null,[S,s("li",null,[n("参数: "),s("ul",null,[N,s("li",null,[n("options: "),a(l,{to:"/editor/interfaces/IColorizerElementOptions.html"},{default:e(()=>[n("IColorizerElementOptions")]),_:1})])])]),B,w]),R,s("ul",null,[K,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("model: "),a(l,{to:"/editor/interfaces/ITextModel.html"},{default:e(()=>[n("ITextModel")]),_:1})]),U,H])]),V,P]),q,s("ul",null,[Y,s("li",null,[n("参数: "),s("ul",null,[G,s("li",null,[n("options: "),a(l,{to:"/editor/interfaces/IEditorConstructionOptions.html"},{default:e(()=>[n("IEditorConstructionOptions")]),_:1}),n(),J]),s("li",null,[n("override: "),a(l,{to:"/editor/interfaces/IEditorOverrideServices.html"},{default:e(()=>[n("IEditorOverrideServices")]),_:1}),n(),Q])])]),s("li",null,[n("返回值: "),a(l,{to:"/editor/interfaces/IStandaloneCodeEditor.html"},{default:e(()=>[n("IStandaloneCodeEditor")]),_:1})]),X]),s("p",null,[n("其中，domElement 参数是一个 HTMLElement 对象，表示要将编辑器实例附加到的 DOM 元素；options 参数是一个 "),a(l,{to:"/editor/interfaces/IEditorConstructionOptions.html"},{default:e(()=>[n("IEditorConstructionOptions 对象")]),_:1}),n("，表示要创建的编辑器实例的选项；override 参数是一个 IEditorOverrideServices 对象，表示要覆盖的编辑器服务。create 方法返回一个 IStandaloneCodeEditor 对象，表示创建的编辑器实例。 示例：")]),Z,s("ul",null,[$,s("li",null,[n("参数: "),s("ul",null,[ss,s("li",null,[n("options: "),a(l,{to:"/editor/interfaces/IDiffEditorConstructionOptions.html"},{default:e(()=>[n("IDiffEditorConstructionOptions")]),_:1}),n(),ns]),s("li",null,[n("override: "),a(l,{to:"/editor/interfaces/IEditorOverrideServices.html"},{default:e(()=>[n("IEditorOverrideServices")]),_:1}),n(),ls])])]),s("li",null,[n("返回值: "),a(l,{to:"/editor/interfaces/IStandaloneDiffEditor.html"},{default:e(()=>[n("IStandaloneDiffEditor")]),_:1})]),as]),es,s("ul",null,[os,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("diffEditor: "),a(l,{to:"/editor/interfaces/IDiffEditor.html"},{default:e(()=>[n("IDiffEditor")]),_:1})]),s("li",null,[n("opts: "),a(l,{to:"/editor/interfaces/IDiffNavigatorOptions.html"},{default:e(()=>[n("IDiffNavigatorOptions")]),_:1}),n(),ps])])]),s("li",null,[n("返回值: "),a(l,{to:"/editor/interfaces/IDiffNavigator.html"},{default:e(()=>[n("IDiffNavigator")]),_:1})]),ts]),rs,s("ul",null,[is,s("li",null,[n("参数: "),s("ul",null,[cs,Ds,s("li",null,[n("uri: "),a(l,{to:"/global/classes/Url.html"},{default:e(()=>[n("Url")]),_:1}),n(),ds])])]),s("li",null,[n("返回值: "),a(l,{to:"/editor/interfaces/ITextModel.html"},{default:e(()=>[n("ITextModel")]),_:1})]),ys]),us,s("ul",null,[Cs,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("opts: "),a(l,{to:"/editor/interfaces/IWebWorkerOptions.html"},{default:e(()=>[n("IWebWorkerOptions")]),_:1})])])]),s("li",null,[n("返回值: "),a(l,{to:"/editor/interfaces/MonacoWebWorker.html"},{default:e(()=>[n("MonacoWebWorker")]),_:1})]),ms]),vs,s("ul",null,[Es,s("li",null,[n("参数: "),s("ul",null,[hs,s("li",null,[n("themeData: "),a(l,{to:"/editor/interfaces/IStandaloneThemeData.html"},{default:e(()=>[n("IStandaloneThemeData")]),_:1})])])]),bs,gs]),Fs,s("ul",null,[_s,fs,s("li",null,[n("返回值: "),a(l,{to:"/editor/interfaces/IDiffEditor.html"},{default:e(()=>[n("IDiffEditor")]),_:1}),n("[]`")]),Is]),As,s("ul",null,[ks,xs,s("li",null,[n("返回值: "),a(l,{to:"/editor/interfaces/ICodeEditor.html"},{default:e(()=>[n("ICodeEditor")]),_:1}),n("[]`")]),Ms]),Ts,s("ul",null,[js,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("uri: "),a(l,{to:"/global/classes/Url.html"},{default:e(()=>[n("Uri")]),_:1})])])]),s("li",null,[n("返回值: "),a(l,{to:"/editor/interfaces/ITextModel.html"},{default:e(()=>[n("ITextModel")]),_:1}),n(" | null`")]),Os]),zs,s("ul",null,[Ls,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("filter: { owner?: string; resource?: Uri; take?: number; } "),s("ul",null,[Ws,s("li",null,[n("esource?: "),a(l,{to:"/global/classes/Url.html"},{default:e(()=>[n("Uri")]),_:1}),n(),Ss]),Ns])])])]),s("li",null,[n("返回值: "),a(l,{to:"/editor/interfaces/IMarker.html"},{default:e(()=>[n("IMarker")]),_:1}),n("[]")]),Bs]),ws,s("ul",null,[Rs,Ks,s("li",null,[n("返回值: "),a(l,{to:"/editor/interfaces/ITextModel.html"},{default:e(()=>[n("ITextModel")]),_:1}),n("[]")]),Us]),Hs,s("ul",null,[Vs,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("listener: ((e: readonly Uri[]) => void) "),s("ul",null,[s("li",null,[n("e: "),a(l,{to:"/global/classes/Url.html"},{default:e(()=>[n("Uri")]),_:1}),n("[] "),Ps])])])])]),qs,Ys]),Gs,s("ul",null,[Js,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[Qs,s("ul",null,[s("li",null,[n("e: { model: ITextModel; oldLanguage: string; } "),s("ul",null,[s("li",null,[n("model： "),a(l,{to:"/editor/interfaces/ITextModel.html"},{default:e(()=>[n("ITextModel")]),_:1}),n(),Xs]),Zs])])])])])]),$s,sn]),nn,s("ul",null,[ln,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("listener: ((diffEditor: IDiffEditor) => void) "),s("ul",null,[s("li",null,[n("diffEditor "),a(l,{to:"/editor/interfaces/IDiffEditor.html"},{default:e(()=>[n("IDiffEditor")]),_:1})])])])])]),an,en]),on,s("ul",null,[pn,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("listener: ((codeEditor: ICodeEditor) => void) "),s("ul",null,[s("li",null,[n("codeEditor： "),a(l,{to:"/editor/interfaces/ICodeEditor.html"},{default:e(()=>[n("ICodeEditor")]),_:1})])])])])]),tn,rn]),cn,s("ul",null,[Dn,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("listener: ((model: ITextModel) => void) "),s("ul",null,[s("li",null,[n("model： "),a(l,{to:"/editor/interfaces/ITextModel.html"},{default:e(()=>[n("ITextModel")]),_:1})])])])])]),dn,yn]),un,s("ul",null,[Cn,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("opener： "),a(l,{to:"/editor/interfaces/ICodeEditorOpener.html"},{default:e(()=>[n("ICodeEditorOpener")]),_:1})])])]),mn,vn]),En,s("ul",null,[hn,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("opener: "),a(l,{to:"/editor/interfaces/ILinkOpener.html"},{default:e(()=>[n("ILinkOpener")]),_:1})])])]),bn,gn]),Fn,s("ul",null,[_n,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("model："),a(l,{to:"/editor/interfaces/ITextModel.html"},{default:e(()=>[n("ITextModel")]),_:1})]),fn])]),In,An]),kn,s("ul",null,[xn,s("li",null,[n("参数: "),s("ul",null,[s("li",null,[n("model: "),a(l,{to:"/editor/interfaces/ITextModel.html"},{default:e(()=>[n("ITextModel")]),_:1})]),Mn,s("li",null,[n("markers: "),a(l,{to:"/editor/interfaces/IMarkerData.html"},{default:e(()=>[n("IMarkerData")]),_:1}),n("[]")])])]),Tn,jn]),On,s("ul",null,[zn,Ln,s("li",null,[n("返回值: "),a(l,{to:"/global/classes/Token.html"},{default:e(()=>[n("Token")]),_:1}),n("[]")]),Wn]),Sn])}const Un=p(c,[["render",Nn],["__file","editor.html.vue"]]);export{Un as default};
