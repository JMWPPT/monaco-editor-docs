import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as d,o as c,c as s,a as e,b as o,d as t,w as n,e as l}from"./app-39581384.js";const h={},u=e("h1",{id:"icontentwidget",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#icontentwidget","aria-hidden":"true"},"#"),o(" IContentWidget")],-1),_=e("code",null,"interface",-1),f={href:"https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.IContentWidget.html",target:"_blank",rel:"noopener noreferrer"},m=l('<h2 id="属性-properties" tabindex="-1"><a class="header-anchor" href="#属性-properties" aria-hidden="true">#</a> 属性 Properties</h2><h3 id="alloweditoroverflow" tabindex="-1"><a class="header-anchor" href="#alloweditoroverflow" aria-hidden="true">#</a> allowEditorOverflow</h3><ul><li>类型： <code>boolean</code> <code>可选</code></li><li>默认值： <code>false</code></li><li>可选项： <code>-</code></li><li>描述： <code>指示内容小部件是否可以溢出编辑器的边界。</code></li></ul><h3 id="suppressmousedown" tabindex="-1"><a class="header-anchor" href="#suppressmousedown" aria-hidden="true">#</a> suppressMouseDown</h3><ul><li>类型： <code>boolean</code> <code>可选</code></li><li>默认值： <code>false</code></li><li>可选项： <code>-</code></li><li>描述： <code>指示是否应该在小部件上按下鼠标时阻止默认的编辑器行为。</code></li></ul><h2 id="方法-methods" tabindex="-1"><a class="header-anchor" href="#方法-methods" aria-hidden="true">#</a> 方法 Methods</h2><h3 id="afterrender" tabindex="-1"><a class="header-anchor" href="#afterrender" aria-hidden="true">#</a> afterRender</h3>',7),g=e("li",null,[o("语法： "),e("code",null,"afterRender(position: ContentWidgetPositionPreference): void")],-1),p=e("li",null,[o("返回值： "),e("code",null,"void")],-1),b=e("li",null,[o("描述： "),e("code",null,"执行操作的方法。")],-1),x=e("h3",{id:"beforerender",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#beforerender","aria-hidden":"true"},"#"),o(" beforeRender")],-1),w=e("li",null,[o("语法： "),e("code",null,"beforeRender?(): IDimension")],-1),I=e("li",null,[o("参数： "),e("code",null,"-")],-1),C=e("li",null,[o("描述： "),e("code",null,"在渲染内容之前执行的可选操作。")],-1),P=l('<h3 id="getdomnode" tabindex="-1"><a class="header-anchor" href="#getdomnode" aria-hidden="true">#</a> getDomNode</h3><ul><li>语法： <code>getDomNode(): HTMLElement | null</code></li><li>参数： <code>-</code></li><li>返回值： <code>HTMLElement | null</code></li><li>描述： <code>获取内容窗口小部件的 DOM 节点。</code></li></ul><h3 id="getid" tabindex="-1"><a class="header-anchor" href="#getid" aria-hidden="true">#</a> getId</h3><ul><li>语法： <code>getId(): string</code></li><li>参数： <code>-</code></li><li>返回值： <code>string</code></li><li>描述： <code>获取内容窗口小部件的唯一标识符。</code></li></ul><h3 id="getposition" tabindex="-1"><a class="header-anchor" href="#getposition" aria-hidden="true">#</a> getPosition</h3>',5),W=e("li",null,[o("语法： "),e("code",null,"getPosition(): IContentWidgetPosition | null")],-1),v=e("li",null,[o("参数： "),e("code",null,"-")],-1),k=e("li",null,[o("描述： "),e("code",null,"获取内容窗口小部件的位置。")],-1);function D(E,L){const r=d("ExternalLinkIcon"),i=d("RouterLink");return c(),s("div",null,[u,e("p",null,[_,o(),e("a",f,[o("官网地址"),t(r)]),o(" 内容小部件与文本内联呈现，并且可以轻松放置在编辑器位置“附近”。")]),m,e("ul",null,[g,e("li",null,[o("参数： "),e("ul",null,[e("li",null,[o("position："),t(i,{to:"/editor/enumerations.html#contentwidgetpositionpreference"},{default:n(()=>[o("ContentWidgetPositionPreference")]),_:1})])])]),p,b]),x,e("ul",null,[w,I,e("li",null,[o("返回值： "),t(i,{to:"/editor/interfaces/IDimension.html"},{default:n(()=>[o("IDimension")]),_:1})]),C]),P,e("ul",null,[W,v,e("li",null,[o("返回值： "),t(i,{to:"/editor/interfaces/IContentWidgetPosition.html"},{default:n(()=>[o("IContentWidgetPosition")]),_:1}),o(" | null`")]),k])])}const M=a(h,[["render",D],["__file","IContentWidget.html.vue"]]);export{M as default};
