import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as i,c,a as n,b as s,d as l,w as e,e as o}from"./app-39581384.js";const t={},D=o(`<h1 id="language" tabindex="-1"><a class="header-anchor" href="#language" aria-hidden="true">#</a> Language</h1><h2 id="getencodedlanguageid" tabindex="-1"><a class="header-anchor" href="#getencodedlanguageid" aria-hidden="true">#</a> getEncodedLanguageId</h2><ul><li>语法: <code>getEncodedLanguageId(languageId: string): number</code></li><li>参数: <code>languageId</code></li><li>返回值: <code>number</code> 指定语言的编码ID。 描述: 用于获取指定语言的编码ID。这个编码ID可以用于在编辑器中设置语言模式。 示例代码：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 获取JavaScript语言的编码ID</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">languageId</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getEncodedLanguageId</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 在编辑器中设置语言模式</span></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setModelLanguage</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getModel</span><span style="color:#D4D4D4;">(), </span><span style="color:#9CDCFE;">languageId</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="getlanguages" tabindex="-1"><a class="header-anchor" href="#getlanguages" aria-hidden="true">#</a> getLanguages</h2><ul><li>语法: <code>getLanguages(): string[]</code></li><li>返回值: <code>string[]</code> 所有已注册的语言ID的数组。 描述: 用于获取所有已注册的语言ID的数组。 示例代码：</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 获取所有已注册的语言ID的数组</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">languages</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getLanguages</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 打印所有语言ID</span></span>
<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onlanguage" tabindex="-1"><a class="header-anchor" href="#onlanguage" aria-hidden="true">#</a> onLanguage</h2>`,8),d=n("li",null,[s("语法: "),n("code",null,"onLanguage(languageId: string, callback: () => void): IDisposable")],-1),y=n("li",null,[s("参数: "),n("code",null,"languageId"),s(" 要监听的语言ID。"),n("code",null,"callback"),s(" 当指定语言被注册时要执行的回调函数。")],-1),u=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 监听JavaScript语言的注册事件</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">onLanguage</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;JavaScript language is registered!&#39;</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消监听</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="onlanguageencountered" tabindex="-1"><a class="header-anchor" href="#onlanguageencountered" aria-hidden="true">#</a> onLanguageEncountered</h2>`,2),v=n("li",null,[s("语法: "),n("code",null,"onLanguageEncountered(callback: (languageId: string) => void): IDisposabl")],-1),C=n("li",null,[s("参数: "),n("code",null,"allback"),s(" 当遇到未注册的语言时要执行的回调函数，该函数接收一个参数"),n("code",null,"languageId"),s("，表示遇到的未注册语言的ID。")],-1),g=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 监听遇到未注册的语言事件</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">onLanguageEncountered</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">languageId</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">\`Encountered an unregistered language: </span><span style="color:#569CD6;">\${</span><span style="color:#9CDCFE;">languageId</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">\`</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消监听</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="register" tabindex="-1"><a class="header-anchor" href="#register" aria-hidden="true">#</a> register</h2>`,2),m=n("li",null,[s("语法: "),n("code",null,"register(language: ILanguageExtensionPoint): void")],-1),b=n("code",null,"language",-1),E=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义要注册的语言的扩展点对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">language</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">extensions:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;.mylang&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">aliases:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;My Language&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">mimetypes:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;text/mylang&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">loader</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">({}),</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册新语言</span></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">language</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registercodeactionprovider" tabindex="-1"><a class="header-anchor" href="#registercodeactionprovider" aria-hidden="true">#</a> registerCodeActionProvider</h2>`,2),h=n("li",null,[s("语法: "),n("code",null,"registerCodeActionProvider(languageSelector: LanguageSelector, provider: CodeActionProvider, metadata?: CodeActionProviderMetadata): IDisposable")],-1),F=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerCodeActionProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideCodeActions</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">range</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// 在此处添加自定义代码操作</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">      {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">title:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;Custom Code Action&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">command:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;customCodeAction&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">arguments:</span><span style="color:#D4D4D4;"> []</span></span>
<span class="line"><span style="color:#D4D4D4;">      }</span></span>
<span class="line"><span style="color:#D4D4D4;">    ];</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registercodelensprovider" tabindex="-1"><a class="header-anchor" href="#registercodelensprovider" aria-hidden="true">#</a> registerCodeLensProvider</h2>`,2),f=n("li",null,[s("语法: "),n("code",null,"registerCodeLensProvider(languageSelector: LanguageSelector, provider: CodeLensProvider): IDisposable")],-1),A=n("code",null,"languageSelector",-1),_=n("code",null,"provider",-1),k=o(`<p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义代码镜头提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideCodeLenses</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">resolveCodeLens</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">codeLens</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">codeLens</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册代码镜头提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerCodeLensProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registercolorprovider" tabindex="-1"><a class="header-anchor" href="#registercolorprovider" aria-hidden="true">#</a> registerColorProvider</h2>`,3),P=n("li",null,[s("语法: "),n("code",null,"registerColorProvider(languageSelector: LanguageSelector, provider: DocumentColorProvider): IDisposable")],-1),I=n("code",null,"languageSelector",-1),S=n("code",null,"provider",-1),L=o(`<p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义颜色提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideDocumentColors</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideColorPresentations</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">colorInfo</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册颜色提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerColorProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registercompletionitemprovider" tabindex="-1"><a class="header-anchor" href="#registercompletionitemprovider" aria-hidden="true">#</a> registerCompletionItemProvider</h2>`,3),x=n("li",null,[s("语法: "),n("code",null,"registerCompletionItemProvider(languageSelector: LanguageSelector, provider: CompletionItemProvider): IDisposable")],-1),T=n("code",null,"languageSelector",-1),j=n("code",null,"provider",-1),R=o(`<p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义自动完成提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideCompletionItems</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">suggestions:</span><span style="color:#D4D4D4;"> [],</span></span>
<span class="line"><span style="color:#9CDCFE;">incomplete:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#DCDCAA;">resolveCompletionItem</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册自动完成提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerCompletionItemProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdeclarationprovider" tabindex="-1"><a class="header-anchor" href="#registerdeclarationprovider" aria-hidden="true">#</a> registerDeclarationProvider</h2>`,3),M=n("li",null,[s("语法: "),n("code",null,"registerDeclarationProvider(languageSelector: LanguageSelector, provider: DeclarationProvider): IDisposable")],-1),H=n("code",null,"languageSelector",-1),z=n("code",null,"provider",-1),B=o(`<p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义声明提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideDeclaration</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册声明提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDeclarationProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdefinitionprovider" tabindex="-1"><a class="header-anchor" href="#registerdefinitionprovider" aria-hidden="true">#</a> registerDefinitionProvider</h2>`,3),q=n("li",null,[s("语法: "),n("code",null,"registerDefinitionProvider(languageSelector: LanguageSelector, provider: DefinitionProvider): IDisposable")],-1),w=n("code",null,"languageSelector",-1),O=o(`<p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco -editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义定义提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideDefinition</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册定义提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDefinitionProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdocumentformattingeditprovider" tabindex="-1"><a class="header-anchor" href="#registerdocumentformattingeditprovider" aria-hidden="true">#</a> registerDocumentFormattingEditProvider</h2>`,3),N=n("li",null,[s("语法: "),n("code",null,"registerDocumentFormattingEditProvider(languageSelector: LanguageSelector, provider: DocumentFormattingEditProvider): IDisposable")],-1),J=n("code",null,"languageSelector",-1),V=o(`<p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义文档格式化提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideDocumentFormattingEdits</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册文档格式化提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDocumentFormattingEditProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdocumenthighlightprovider" tabindex="-1"><a class="header-anchor" href="#registerdocumenthighlightprovider" aria-hidden="true">#</a> registerDocumentHighlightProvider</h2>`,3),U=n("li",null,[s("语法: "),n("code",null,"registerDocumentHighlightProvider(languageSelector: LanguageSelector, provider: DocumentHighlightProvider): IDisposable")],-1),W=n("code",null,"languageSelector",-1),Z=o(`<p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义文档高亮提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideDocumentHighlights</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册文档高亮提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDocumentHighlightProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdocumentrangeformattingeditprovider" tabindex="-1"><a class="header-anchor" href="#registerdocumentrangeformattingeditprovider" aria-hidden="true">#</a> registerDocumentRangeFormattingEditProvider</h2>`,3),$=n("li",null,[s("语法: "),n("code",null,"registerDocumentRangeFormattingEditProvider(languageSelector: LanguageSelector, provider: DocumentRangeFormattingEditProvider): IDisposable")],-1),G=n("code",null,"languageSelector",-1),K=n("code",null,"provider",-1),Q=o(`<p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义文档范围格式化提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">provideDocumentRangeFormattingEdits</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">range</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册文档范围格式化提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDocumentRangeFormattingEditProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdocumentrangesemantictokensprovider" tabindex="-1"><a class="header-anchor" href="#registerdocumentrangesemantictokensprovider" aria-hidden="true">#</a> registerDocumentRangeSemanticTokensProvider</h2>`,3),X=n("li",null,[s("语法: "),n("code",null,"registerDocumentRangeSemanticTokensProvider(languageSelector: LanguageSelector, provider: DocumentRangeSemanticTokensProvider): IDisposable")],-1),Y=n("code",null,"languageSelector",-1),ss=o(`<p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义文档范围语义标记提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">provideDocumentRangeSemanticTokens</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">range</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">data:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">Uint32Array</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">        };</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册文档范围语义标记提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDocumentRangeSemanticTokensProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdocumentsemantictokensprovider" tabindex="-1"><a class="header-anchor" href="#registerdocumentsemantictokensprovider" aria-hidden="true">#</a> registerDocumentSemanticTokensProvider</h2>`,3),ns=n("li",null,[s("语法: "),n("code",null,"registerDocumentSemanticTokensProvider(languageSelector: LanguageSelector, provider: DocumentSemanticTokensProvider): IDisposable")],-1),as=n("code",null,"languageSelector",-1),ls=n("code",null,"provider",-1),es=o(`<p>描述: 语义标记提供者将补充和增强简单的自上而下标记器。简单的自上而下标记器可以通过 setMonarchTokensProvider 或 setTokensProvider 设置。为了获得最佳用户体验，请注册语义标记提供程序和自上而下的标记生成器。 示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义文档语义标记提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideDocumentSemanticTokens</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">lastResultId</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">data:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">Uint32Array</span><span style="color:#D4D4D4;">(),</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">resultId:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    };</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">releaseDocumentSemanticTokens</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">resultId</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册文档语义标记提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDocumentSemanticTokensProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerdocumentsymbolprovider" tabindex="-1"><a class="header-anchor" href="#registerdocumentsymbolprovider" aria-hidden="true">#</a> registerDocumentSymbolProvider</h2>`,3),os=n("li",null,[s("语法: "),n("code",null,"registerDocumentSymbolProvider(languageSelector: LanguageSelector, provider: DocumentSymbolProvider): IDisposable")],-1),ps=n("code",null,"languageSelector",-1),rs=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义文档符号提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideDocumentSymbols</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册文档符号提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerDocumentSymbolProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerfoldingrangeprovider" tabindex="-1"><a class="header-anchor" href="#registerfoldingrangeprovider" aria-hidden="true">#</a> registerFoldingRangeProvider</h2>`,2),is=n("li",null,[s("语法: "),n("code",null,"registerFoldingRangeProvider(languageSelector: LanguageSelector, provider: FoldingRangeProvider): IDisposable")],-1),cs=n("code",null,"languageSelector",-1),ts=n("code",null,"provider",-1),Ds=o(`<p>描述: 用于注册折叠范围提供程序。 示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义折叠范围提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideFoldingRanges</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册折叠范围提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerFoldingRangeProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerhoverprovider" tabindex="-1"><a class="header-anchor" href="#registerhoverprovider" aria-hidden="true">#</a> registerHoverProvider</h2>`,3),ds=n("li",null,[s("语法: "),n("code",null,"registerHoverProvider(languageSelector: LanguageSelector, provider: HoverProvider): IDisposable")],-1),ys=n("code",null,"languageSelector",-1),us=n("code",null,"provider",-1),vs=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义悬停提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideHover</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">contents:</span><span style="color:#D4D4D4;"> [],</span></span>
<span class="line"><span style="color:#D4D4D4;">    };</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册悬停提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerHoverProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerimplementationprovider" tabindex="-1"><a class="header-anchor" href="#registerimplementationprovider" aria-hidden="true">#</a> registerImplementationProvider</h2>`,2),Cs=n("li",null,[s("语法: "),n("code",null,"registerImplementationProvider(languageSelector: LanguageSelector, provider: ImplementationProvider): IDisposable")],-1),gs=n("code",null,"languageSelector",-1),ms=n("code",null,"provider",-1),bs=n("li",null,"返回值: IDisposable一个对象，用于取消注册。",-1),Es=o(`<p>描述: 用于注册实现提供程序。 示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义实现供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideImplementation</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册实现提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerImplementationProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerreferenceprovider" tabindex="-1"><a class="header-anchor" href="#registerreferenceprovider" aria-hidden="true">#</a> registerReferenceProvider</h2>`,3),hs=n("li",null,[s("语法: "),n("code",null,"registerReferenceProvider(languageId: string, provider: ReferenceProvider): IDisposable")],-1),Fs=n("li",null,[s("参数: "),n("code",null,"languageId"),s(" 要注册引用提供程序的语言ID。 "),n("code",null,"provider"),s(" 引用提供程序对象。")],-1),fs=o(`<p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义引用提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#DCDCAA;">provideReferences</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [];</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册引用提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerReferenceProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerinlayhintsprovider" tabindex="-1"><a class="header-anchor" href="#registerinlayhintsprovider" aria-hidden="true">#</a> registerInlayHintsProvider</h2>`,3),As=n("li",null,[s("语法: "),n("code",null,"registerInlayHintsProvider(languageSelector: LanguageSelector, provider: InlayHintsProvider): IDisposable")],-1),_s=n("li",null,"描述: ``",-1),ks=n("h2",{id:"registerinlinecompletionsprovider",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#registerinlinecompletionsprovider","aria-hidden":"true"},"#"),s(" registerInlineCompletionsProvider")],-1),Ps=n("li",null,[s("语法: "),n("code",null,"registerInlineCompletionsProvider(languageSelector: LanguageSelector, provider: InlineCompletionsProvider<InlineCompletions<InlineCompletion>>): IDisposable")],-1),Is=n("li",null,"描述: ``",-1),Ss=n("h2",{id:"registerlinkprovider",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#registerlinkprovider","aria-hidden":"true"},"#"),s(" registerLinkProvider")],-1),Ls=n("li",null,[s("语法: "),n("code",null,"registerLinkProvider(languageSelector: LanguageSelector, provider: LinkProvider): IDisposable")],-1),xs=n("li",null,"描述: ``",-1),Ts=n("h2",{id:"registerlinkededitingrangeprovider",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#registerlinkededitingrangeprovider","aria-hidden":"true"},"#"),s(" registerLinkedEditingRangeProvider")],-1),js=n("li",null,[s("语法: "),n("code",null,"registerLinkedEditingRangeProvider(languageSelector: LanguageSelector, provider: LinkedEditingRangeProvider): IDisposable")],-1),Rs=n("li",null,"描述: ``",-1),Ms=n("h2",{id:"registerontypeformattingeditprovider",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#registerontypeformattingeditprovider","aria-hidden":"true"},"#"),s(" registerOnTypeFormattingEditProvider")],-1),Hs=n("li",null,[s("语法: "),n("code",null,"registerOnTypeFormattingEditProvider(languageSelector: LanguageSelector, provider: OnTypeFormattingEditProvider): IDisposable")],-1),zs=n("li",null,"描述: ``",-1),Bs=n("h2",{id:"registerreferenceprovider-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#registerreferenceprovider-1","aria-hidden":"true"},"#"),s(" registerReferenceProvider")],-1),qs=n("li",null,[s("语法: "),n("code",null,"registerReferenceProvider(languageSelector: LanguageSelector, provider: ReferenceProvider): IDisposable")],-1),ws=n("li",null,"描述: ``",-1),Os=n("h2",{id:"registerrenameprovider",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#registerrenameprovider","aria-hidden":"true"},"#"),s(" registerRenameProvider")],-1),Ns=n("li",null,[s("语法: "),n("code",null,"registerRenameProvider(languageId: string, provider: RenameProvider): IDisposable")],-1),Js=n("li",null,[s("参数: "),n("code",null,"languageId"),s(" 要注册重命名提供程序的语言ID。 "),n("code",null,"provider"),s(" 重命名提供程序对象。")],-1),Vs=n("li",null,"描述: 用于注册重命名提供程序。",-1),Us=o(`<p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义重命名提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">provideRenameEdits</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">newName</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">edits:</span><span style="color:#D4D4D4;"> [],</span></span>
<span class="line"><span style="color:#D4D4D4;">        };</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册重命名提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerRenameProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="registerselectionrangeprovider" tabindex="-1"><a class="header-anchor" href="#registerselectionrangeprovider" aria-hidden="true">#</a> registerSelectionRangeProvider</h2>`,3),Ws=n("li",null,[s("语法: "),n("code",null,"registerSelectionRangeProvider(languageSelector: LanguageSelector, provider: SelectionRangeProvider): IDisposable")],-1),Zs=n("li",null,"描述: ``",-1),$s=n("h2",{id:"registersignaturehelpprovider",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#registersignaturehelpprovider","aria-hidden":"true"},"#"),s(" registerSignatureHelpProvider")],-1),Gs=n("li",null,[s("语法: "),n("code",null,"registerSignatureHelpProvider(languageSelector: LanguageSelector, provider: SignatureHelpProvider): IDisposable")],-1),Ks=n("li",null,"描述: 用于注册签名帮助提供程序。",-1),Qs=o(`<p>示例代码：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 引入monaco-editor</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">*</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;monaco-editor&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 定义签名帮助提供程序对象</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">provider</span><span style="color:#D4D4D4;"> = {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">provideSignatureHelp</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> (</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">context</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">signatures:</span><span style="color:#D4D4D4;"> [],</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">activeSignature:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#9CDCFE;">activeParameter:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#D4D4D4;">        };</span></span>
<span class="line"><span style="color:#D4D4D4;">    },</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 注册签名帮助提供程序</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">disposable</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerSignatureHelpProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;myLanguage&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">provider</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 取消注册</span></span>
<span class="line"><span style="color:#9CDCFE;">disposable</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">dispose</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="registertokensproviderfactory" tabindex="-1"><a class="header-anchor" href="#registertokensproviderfactory" aria-hidden="true">#</a> registerTokensProviderFactory</h3>`,3),Xs=n("li",null,[s("语法: "),n("code",null,"registerTokensProviderFactory(languageId: string, factory: TokensProviderFactory): IDisposable")],-1),Ys=n("li",null,[s("languageId: "),n("code",null,"string")],-1),sn=n("li",null,[s("返回值: "),n("code",null,"-")],-1),nn=n("li",null,"描述: Monaco Editor中的一个方法，用于注册一个标记提供程序工厂。标记提供程序负责为编辑器中的文本提供语法高亮和其他标记信息。以下是使用 registerTokensProviderFactory 方法的示例代码：",-1),an=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerTokensProviderFactory</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">getInitialState</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">MyState</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">tokenize</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">line</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">state</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">offsetDelta</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">stopAtOffset</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">MyTokenizer</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">tokenize</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">line</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">state</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">offsetDelta</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">stopAtOffset</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">MyState</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">line</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">tokens</span><span style="color:#D4D4D4;"> = [];</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">MyTokenizer</span><span style="color:#D4D4D4;">() {}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">MyTokenizer</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">tokenize</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">line</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">state</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">offsetDelta</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">stopAtOffset</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">var</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">tokens</span><span style="color:#D4D4D4;"> = [];</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">// tokenization logic goes here</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">tokens:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">tokens</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">endState:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">state</span></span>
<span class="line"><span style="color:#D4D4D4;">  };</span></span>
<span class="line"><span style="color:#D4D4D4;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个示例中，使用 monaco.languages.registerTokensProviderFactory 方法注册了一个名为 javascript 的语言的标记提供程序工厂。该工厂包含两个方法： getInitialState 和 tokenize 。 getInitialState 方法返回一个新的状态对象，该对象将在每次调用 tokenize 方法时传递给它。 tokenize 方法接收一行文本、当前状态、偏移量增量和停止偏移量等参数，并返回一个包含标记和新状态的对象。在这个示例中，我们使用 MyTokenizer 类作为标记化逻辑的实现，并使用 MyState 类作为状态对象的实现。 MyTokenizer.tokenize 方法实现了标记化逻辑，将标记添加到 tokens 数组中，并返回一个包含标记和状态对象的对象。</p><h2 id="registertypedefinitionprovider" tabindex="-1"><a class="header-anchor" href="#registertypedefinitionprovider" aria-hidden="true">#</a> registerTypeDefinitionProvider</h2>`,3),ln=n("li",null,[s("用法："),n("code",null,"registerTypeDefinitionProvider(languageSelector: LanguageSelector, provider: TypeDefinitionProvider): IDisposable")],-1),en=n("code",null,"languageSelector",-1),on=n("code",null,"provider",-1),pn=o(`<p>允许您为特定语言注册类型定义提供程序。类型定义提供程序允许您为特定类型定义提供跳转和浏览功能。该方法接受两个参数，第一个参数是语言标识符，第二个参数是类型定义提供程序对象。 以下是 registerTypeDefinitionProvider 的一个示例用法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerTypeDefinitionProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideTypeDefinition</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;">// your implementation goes here</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，我们使用 registerTypeDefinitionProvider 方法为 javascript 语言注册了一个类型定义提供程序。我们传递了一个包含 provideTypeDefinition 方法的对象作为第二个参数。 provideTypeDefinition 方法接受三个参数： model ， position 和 token 。 model 参数是一个 ITextModel 对象，表示当前编辑器文本模型。 position 参数是一个 Position 对象，表示要查找类型定义的位置。 token 参数是一个取消令牌，用于取消操作（可选）。 在 provideTypeDefinition 方法中，您可以实现自己的逻辑来查找并返回类型定义。例如，您可以使用 monaco.languages.getTypeDefinitions 方法来查找类型定义。该方法接受三个参数： model ， position 和 token 。 model 和 position 参数与 provideTypeDefinition 方法中的相同。 token 参数是一个取消令牌，用于取消操作（可选）。 getTypeDefinitions 方法返回一个 Promise ，该 Promise 解析为一个类型定义数组。每个类型定义都是一个 Location 对象，表示类型定义的位置。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">registerTypeDefinitionProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">provideTypeDefinition</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getTypeDefinitions</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">uri</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">position</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">token</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，我们使用 monaco.languages.getTypeDefinitions 方法在 javascript 语言中查找类型定义。我们使用相同的 model 和 position 参数，并将 token 参数传递给 getTypeDefinitions 方法。然后，我们返回 getTypeDefinitions 方法返回的 Promise 。</p><h2 id="setcolormap" tabindex="-1"><a class="header-anchor" href="#setcolormap" aria-hidden="true">#</a> setColorMap</h2><ul><li>用法：<code>setColorMap(colorMap: string[]): void</code></li><li>参数： <ul><li><code>colorMap</code>: string[]</li></ul></li><li>返回值： <code>-</code></li></ul><p>设置自定义颜色映射。该方法接受一个参数，该参数是一个包含颜色映射的对象。 以下是 setColorMap 的一个示例用法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setColorMap</span><span style="color:#D4D4D4;">({</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editor.background&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#282c34&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editor.foreground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#abb2bf&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editor.lineHighlightBackground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#3e4451&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editorLineNumber.foreground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#636d83&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editor.selectionBackground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#4d5b70&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editorCursor.foreground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#528bff&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#CE9178;">&#39;editorWhitespace.foreground&#39;</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;#abb2bf&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function foo() { console.log(&quot;Hello, world!&quot;); }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;javascript&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，我们使用 setColorMap 方法为编辑器设置了自定义颜色映射。我们传递了一个包含颜色映射的对象，该对象具有多个属性，每个属性都是一个编辑器颜色的名称和对应的颜色值。在此示例中，我们设置了编辑器的背景、前景、行高亮背景、行号前景、选择背景、光标前景和空白字符前景颜色。</p><h2 id="setlanguageconfiguration" tabindex="-1"><a class="header-anchor" href="#setlanguageconfiguration" aria-hidden="true">#</a> setLanguageConfiguration</h2>`,11),rn=n("li",null,[s("用法："),n("code",null,"setLanguageConfiguration(languageId: string, configuration: LanguageConfiguration): IDisposable")],-1),cn=n("li",null,[n("code",null,"languageId"),s(": "),n("code",null,"string")],-1),tn=n("code",null,"configuration",-1),Dn=o(`<p>为特定语言设置自定义配置。该方法接受两个参数，第一个参数是语言标识符，第二个参数是包含配置选项的对象。 以下是 setLanguageConfiguration 的一个示例用法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;mySpecialLanguage&#39;</span><span style="color:#D4D4D4;"> });</span></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setLanguageConfiguration</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;mySpecialLanguage&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">comments:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">lineComment:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;//&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">blockComment:</span><span style="color:#D4D4D4;"> [</span><span style="color:#CE9178;">&#39;/*&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;*/&#39;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">brackets:</span><span style="color:#D4D4D4;"> [[</span><span style="color:#CE9178;">&#39;{&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;}&#39;</span><span style="color:#D4D4D4;">], [</span><span style="color:#CE9178;">&#39;[&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;]&#39;</span><span style="color:#D4D4D4;">], [</span><span style="color:#CE9178;">&#39;(&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;)&#39;</span><span style="color:#D4D4D4;">]],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">autoClosingPairs:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">    { </span><span style="color:#9CDCFE;">open:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;{&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">close:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;}&#39;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">    { </span><span style="color:#9CDCFE;">open:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;[&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">close:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;]&#39;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">    { </span><span style="color:#9CDCFE;">open:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;(&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">close:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;)&#39;</span><span style="color:#D4D4D4;"> }</span></span>
<span class="line"><span style="color:#D4D4D4;">  ],</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">surroundingPairs:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">    { </span><span style="color:#9CDCFE;">open:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;{&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">close:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;}&#39;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">    { </span><span style="color:#9CDCFE;">open:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;[&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">close:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;]&#39;</span><span style="color:#D4D4D4;"> },</span></span>
<span class="line"><span style="color:#D4D4D4;">    { </span><span style="color:#9CDCFE;">open:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;(&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">close:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;)&#39;</span><span style="color:#D4D4D4;"> }</span></span>
<span class="line"><span style="color:#D4D4D4;">  ]</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function foo() { console.log(&quot;Hello, world!&quot;); }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;mySpecialLanguage&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，我们首先使用 register 方法注册了一个名为 mySpecialLanguage 的新语言。然后，我们使用 setLanguageConfiguration 方法为其设置了自定义配置。我们将 mySpecialLanguage 作为第一个参数传递给 setLanguageConfiguration 方法，以指定我们要为其设置自定义配置。然后，我们传递了一个包含配置选项的对象，该对象具有 comments 、 brackets 、 autoClosingPairs 和 surroundingPairs 属性，每个属性都包含一个或多个配置选项。在此示例中，我们为该语言设置了单行和多行注释、括号、自动闭合对和周围的对。</p><h2 id="setmonarchtokensprovider" tabindex="-1"><a class="header-anchor" href="#setmonarchtokensprovider" aria-hidden="true">#</a> setMonarchTokensProvider</h2>`,4),dn=n("li",null,[s("用法："),n("code",null,"setMonarchTokensProvider(languageId: string, languageDef: IMonarchLanguage | Thenable<IMonarchLanguage>): IDisposable")],-1),yn=n("li",null,[n("code",null,"languageId"),s(": "),n("code",null,"string")],-1),un=n("code",null,"languageDef",-1),vn=o(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">register</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;mySpecialLanguage&#39;</span><span style="color:#D4D4D4;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setMonarchTokensProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;mySpecialLanguage&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">tokenizer:</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">root:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#DCDCAA;">\\b</span><span style="color:#D16969;">if</span><span style="color:#DCDCAA;">\\b</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;keyword&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#DCDCAA;">\\b</span><span style="color:#D16969;">\\d</span><span style="color:#D7BA7D;">+</span><span style="color:#DCDCAA;">\\b</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;number&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#DCDCAA;">\\b</span><span style="color:#CE9178;">(</span><span style="color:#D16969;">a</span><span style="color:#DCDCAA;">|</span><span style="color:#D16969;">an</span><span style="color:#DCDCAA;">|</span><span style="color:#D16969;">the</span><span style="color:#CE9178;">)</span><span style="color:#DCDCAA;">\\b</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;article&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#CE9178;">[</span><span style="color:#D16969;">a-z</span><span style="color:#CE9178;">][</span><span style="color:#D16969;">a-z0-9</span><span style="color:#CE9178;">]</span><span style="color:#D7BA7D;">*</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;identifier&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#CE9178;">[</span><span style="color:#D16969;">A-Z</span><span style="color:#CE9178;">][</span><span style="color:#D16969;">a-z0-9</span><span style="color:#CE9178;">]</span><span style="color:#D7BA7D;">*</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;type.identifier&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/&quot;/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;string&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;@string&#39;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">    ],</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">string:</span><span style="color:#D4D4D4;"> [</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#CE9178;">[^</span><span style="color:#D7BA7D;">\\\\</span><span style="color:#D16969;">&quot;</span><span style="color:#CE9178;">]</span><span style="color:#D7BA7D;">+</span><span style="color:#D16969;">/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;string&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/</span><span style="color:#D7BA7D;">\\\\</span><span style="color:#D16969;">./</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;string.escape&#39;</span><span style="color:#D4D4D4;">],</span></span>
<span class="line"><span style="color:#D4D4D4;">      [</span><span style="color:#D16969;">/&quot;/</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;string&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;@pop&#39;</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">    ]</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;if (x &gt; 0) { console.log(&quot;Hello, world!&quot;); }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;mySpecialLanguage&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，我们首先使用 register 方法注册了一个名为 mySpecialLanguage 的新语言。然后，我们使用 setMonarchTokensProvider 方法为其设置了自定义语法高亮规则。我们将 mySpecialLanguage 作为第一个参数传递给 setMonarchTokensProvider 方法，以指定我们要为其设置语法高亮规则。然后，我们传递了一个包含语法规则的对象，该对象具有一个名为 tokenizer 的属性，该属性包含一个名为 root 的数组，该数组包含一组正则表达式和对应的标记类型。我们还定义了一个名为 string 的标记类型，用于高亮字符串文字。最后，我们创建了一个使用新语言的编辑器，并将一些示例代码设置为其值。 您可以根据需要自定义语法高亮规则的实现。</p><h2 id="settokensprovider" tabindex="-1"><a class="header-anchor" href="#settokensprovider" aria-hidden="true">#</a> setTokensProvider</h2>`,3),Cn=n("li",null,[s("用法："),n("code",null,"setTokensProvider(languageId: string, provider: TokensProvider | EncodedTokensProvider | Thenable<TokensProvider | EncodedTokensProvider>): IDisposable")],-1),gn=n("li",null,[n("code",null,"languageId"),s(": "),n("code",null,"string")],-1),mn=n("code",null,"provider",-1),bn=o(`<p>允许您为编辑器设置自定义标记提供程序。该方法接受一个参数，该参数是实现 monaco.languages.TokensProvider 接口的对象。 以下是 setTokensProvider 的一个示例用法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">editor</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">create</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;container&#39;</span><span style="color:#D4D4D4;">), {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">value:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;function foo() { console.log(&quot;Hello, world!&quot;); }&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">language:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;javascript&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">monaco</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">languages</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">setTokensProvider</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;javascript&#39;</span><span style="color:#D4D4D4;">, {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">getInitialState</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">() { ... },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">tokenize</span><span style="color:#9CDCFE;">:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">line</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">state</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">offsetDelta</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">stopAtOffset</span><span style="color:#D4D4D4;">) { ... }</span></span>
<span class="line"><span style="color:#D4D4D4;">});</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，我们首先创建了一个JavaScript编辑器，然后使用 setTokensProvider 方法为其设置了自定义标记提供程序。我们将JavaScript作为参数传递给 setTokensProvider 方法，以指定我们要为其设置标记提供程序。然后，我们传递了一个对象，该对象实现了 monaco.languages.TokensProvider 接口，并具有 getInitialState 和 tokenize 方法。 getInitialState 方法返回初始状态，而 tokenize 方法接受一行代码和状态作为输入，并返回一个标记数组。</p><p>您可以根据需要自定义标记提供程序的实现。</p>`,4);function En(hn,Fn){const a=r("RouterLink");return i(),c("div",null,[D,n("ul",null,[d,y,n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消监听。 描述: 用于监听指定语言的注册事件。 示例代码：")])]),u,n("ul",null,[v,C,n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消监听。 描述: 用于监听遇到未注册的语言事件。 示例代码：")])]),g,n("ul",null,[m,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[b,s(": "),l(a,{to:"/language/interfaces/ILanguageExtensionPoint.html"},{default:e(()=>[s("ILanguageExtensionPoint")]),_:1}),s(" 要注册的语言的扩展点对象。 描述: 用于注册一种新的语言。 示例代码：")])])])]),E,n("ul",null,[h,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[s("languageSelector: "),l(a,{to:"/language/alias.html#languageselector"},{default:e(()=>[s("LanguageSelector")]),_:1})]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/CodeActionProvider.html"},{default:e(()=>[s("CodeActionProvider")]),_:1})]),n("li",null,[s("metadata: "),l(a,{to:"/language/interfaces/CodeActionProviderMetadata.html"},{default:e(()=>[s("CodeActionProviderMetadata")]),_:1})])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。 描述: 用于注册一个代码操作提供程序。它的作用是在编辑器中显示一个菜单，当用户选择其中一个操作时，将在文本中执行操作。 示例代码：")])]),F,n("ul",null,[f,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[A,s(": "),l(a,{to:"/language/alias.html#languageselector"},{default:e(()=>[s("LanguageSelector")]),_:1}),s(" 要注册代码镜头提供程序的语言ID。")]),n("li",null,[_,s(": "),l(a,{to:"/language/interfaces/CodeLensProvider.html"},{default:e(()=>[s("CodeLensProvider")]),_:1}),s(" 代码镜头提供程序对象。")])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。 描述: 用于注册代码镜头提供程序。")])]),k,n("ul",null,[P,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[I,s(": "),l(a,{to:"/language/alias.html#languageselector"},{default:e(()=>[s("LanguageSelector")]),_:1}),s(" 要注册颜色提供程序的语言ID。")]),n("li",null,[S,s(": "),l(a,{to:"/language/interfaces/DocumentColorProvider.html"},{default:e(()=>[s("DocumentColorProvider")]),_:1}),s(" 颜色提供程序对象。")])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。 描述: 用于注册颜色提供程序。")])]),L,n("ul",null,[x,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[T,s(": "),l(a,{to:"/language/alias.html#languageselector"},{default:e(()=>[s("LanguageSelector")]),_:1}),s(" 要注册颜色提供程序的语言ID。")]),n("li",null,[j,s(": "),l(a,{to:"/language/interfaces/CompletionItemProvider.html"},{default:e(()=>[s("CompletionItemProvider")]),_:1}),s(" 自动完成提供程序对象。")])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。 描述: 用于注册自动完成提供程序。")])]),R,n("ul",null,[M,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[H,s(": "),l(a,{to:"/language/alias.html#languageselector"},{default:e(()=>[s("LanguageSelector")]),_:1}),s(" 要注册声明提供程序的语言ID。")]),n("li",null,[z,s("： "),l(a,{to:"/language/interfaces/DeclarationProvider.html"},{default:e(()=>[s("DeclarationProvider")]),_:1}),s(" 声明提供程序对象。")])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。 描述: 用于注册声明提供程序。")])]),B,n("ul",null,[q,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[w,s(": "),l(a,{to:"/language/alias.html#languageselector"},{default:e(()=>[s("LanguageSelector")]),_:1}),s(" 要注册定义提供程序的语言ID。")]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/DefinitionProvider.html"},{default:e(()=>[s("DefinitionProvider")]),_:1})])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。 描述: 用于注册定义提供程序。")])]),O,n("ul",null,[N,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[J,s("： "),l(a,{to:"/language/alias.html#languageselector"},{default:e(()=>[s("LanguageSelector")]),_:1}),s(" 要注册文档格式化提供程序的语言ID。")]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/DocumentFormattingEditProvider.html"},{default:e(()=>[s("DocumentFormattingEditProvider")]),_:1})])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。 描述: 用于注册文档格式化提供程序。")])]),V,n("ul",null,[U,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[W,s(": "),l(a,{to:"/language/alias.html#languageselector"},{default:e(()=>[s("LanguageSelector")]),_:1}),s(" 要注册文档高亮提供程序的语言ID。")]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/DocumentHighlightProvider.html"},{default:e(()=>[s("DocumentHighlightProvider")]),_:1}),s(" 文档高亮提供程序对象。")])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。 描述: 用于注册文档高亮提供程序。")])]),Z,n("ul",null,[$,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[G,s(": "),l(a,{to:"/language/alias.html#languageselector"},{default:e(()=>[s("LanguageSelector")]),_:1}),s(" 要注册文档范围格式化提供程序的语言ID。")]),n("li",null,[K,s(": "),l(a,{to:"/language/interfaces/DocumentRangeFormattingEditProvider.html"},{default:e(()=>[s("DocumentRangeFormattingEditProvider")]),_:1}),s(" 文档范围格式化提供程序对象。")])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。 描述: 用于注册文档范围格式化提供程序。")])]),Q,n("ul",null,[X,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[Y,s(": "),l(a,{to:"/language/alias.html#languageSelector"},{default:e(()=>[s("languageSelector")]),_:1}),s(" 要注册文档范围语义标记提供程序的语言ID。")]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/DocumentRangeSemanticTokensProvider.html"},{default:e(()=>[s("DocumentRangeSemanticTokensProvider")]),_:1}),s(" 文档范围语义标记提供程序对象。")])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。 描述: 用于注册文档范围语义标记提供程序。")])]),ss,n("ul",null,[ns,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[as,s(": "),l(a,{to:"/language/alias.html#languageSelector"},{default:e(()=>[s("languageSelector")]),_:1}),s(" 要注册文档范围语义标记提供程序的语言ID。")]),n("li",null,[ls,s(": "),l(a,{to:"/language/interfaces/DocumentSemanticTokensProvider.html"},{default:e(()=>[s("DocumentSemanticTokensProvider")]),_:1}),s(" 文档语义标记提供程序对象。")])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。")])]),es,n("ul",null,[os,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[ps,s(": "),l(a,{to:"/language/alias.html#languageSelector"},{default:e(()=>[s("languageSelector")]),_:1}),s(" 要注册文档范围语义标记提供程序的语言ID。")]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/DocumentSymbolProvider.html"},{default:e(()=>[s("DocumentSymbolProvider")]),_:1})])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。 描述: 用于注册文档符号提供程序。 示例代码：")])]),rs,n("ul",null,[is,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[cs,s(": "),l(a,{to:"/language/alias.html#LanguageSelector"},{default:e(()=>[s("LanguageSelector")]),_:1}),s(" 要注册折叠范围提供程序的语言ID。")]),n("li",null,[ts,s(": "),l(a,{to:"/language/interfaces/FoldingRangeProvider.html"},{default:e(()=>[s("FoldingRangeProvider")]),_:1}),s(" 折叠范围提供程序对象。")])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。")])]),Ds,n("ul",null,[ds,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[ys,s("："),l(a,{to:"/language/alias.html#LanguageSelector"},{default:e(()=>[s("LanguageSelector")]),_:1}),s(" 要注册悬停提供程序的语言ID。")]),n("li",null,[us,s(": "),l(a,{to:"/language/interfaces/HoverProvider.html"},{default:e(()=>[s("HoverProvider")]),_:1}),s(" 悬停提供程序对象。")])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。 描述: 用于注册悬停提供程序。 示例代码：")])]),vs,n("ul",null,[Cs,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[gs,s(": "),l(a,{to:"/language/alias.html#LanguageSelector"},{default:e(()=>[s("LanguageSelector")]),_:1}),s(" 要注册实现提供程序的语言ID。")]),n("li",null,[ms,s(": "),l(a,{to:"/language/interfaces/ImplementationProvider.html"},{default:e(()=>[s("ImplementationProvider")]),_:1}),s(" 实现提供程序对象。")])])]),bs]),Es,n("ul",null,[hs,Fs,n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。 描述: 用于注册引用提供程序。")])]),fs,n("ul",null,[As,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[s("languageSelector: "),l(a,{to:"/language/alias.html#LanguageSelector"},{default:e(()=>[s("LanguageSelector")]),_:1})]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/InlayHintsProvider.html"},{default:e(()=>[s("InlayHintsProvider")]),_:1})])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。")]),_s]),ks,n("ul",null,[Ps,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[s("languageSelector: "),l(a,{to:"/language/alias.html#LanguageSelector"},{default:e(()=>[s("LanguageSelector")]),_:1})]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/InlineCompletionsProvider.html"},{default:e(()=>[s("InlineCompletionsProvider")]),_:1}),s("<"),l(a,{to:"/language/interfaces/InlineCompletions.html"},{default:e(()=>[s("InlineCompletions")]),_:1}),s("<"),l(a,{to:"/language/interfaces/InlineCompletion.html"},{default:e(()=>[s("InlineCompletion")]),_:1}),s(">>")])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。")]),Is]),Ss,n("ul",null,[Ls,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[s("languageSelector: "),l(a,{to:"/language/alias.html#LanguageSelector"},{default:e(()=>[s("LanguageSelector")]),_:1})]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/LinkProvider.html"},{default:e(()=>[s("LinkProvider")]),_:1})])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。")]),xs]),Ts,n("ul",null,[js,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[s("languageSelector: "),l(a,{to:"/language/alias.html#LanguageSelector"},{default:e(()=>[s("LanguageSelector")]),_:1})]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/LinkedEditingRangeProvider.html"},{default:e(()=>[s("LinkedEditingRangeProvider")]),_:1})])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。")]),Rs]),Ms,n("ul",null,[Hs,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[s("languageSelector: "),l(a,{to:"/language/alias.html#LanguageSelector"},{default:e(()=>[s("LanguageSelector")]),_:1})]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/OnTypeFormattingEditProvider.html"},{default:e(()=>[s("OnTypeFormattingEditProvider")]),_:1})])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。")]),zs]),Bs,n("ul",null,[qs,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[s("languageSelector: "),l(a,{to:"/language/alias.html#LanguageSelector"},{default:e(()=>[s("LanguageSelector")]),_:1})]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/ReferenceProvider.html"},{default:e(()=>[s("ReferenceProvider")]),_:1})])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。")]),ws]),Os,n("ul",null,[Ns,Js,n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。")]),Vs]),Us,n("ul",null,[Ws,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[s("languageSelector: "),l(a,{to:"/language/alias.html#LanguageSelector"},{default:e(()=>[s("LanguageSelector")]),_:1})]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/SelectionRangeProvider.html"},{default:e(()=>[s("SelectionRangeProvider")]),_:1})])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 一个对象，用于取消注册。")]),Zs]),$s,n("ul",null,[Gs,n("li",null,[s("参数: "),n("ul",null,[n("li",null,[s("languageSelector: "),l(a,{to:"/language/alias.html#LanguageSelector"},{default:e(()=>[s("LanguageSelector")]),_:1})]),n("li",null,[s("provider: "),l(a,{to:"/language/interfaces/SignatureHelpProvider.html"},{default:e(()=>[s("SignatureHelpProvider")]),_:1})])])]),n("li",null,[s("返回值: "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1})]),Ks]),Qs,n("ul",null,[Xs,n("li",null,[s("参数: "),n("ul",null,[Ys,n("li",null,[s("factory: "),l(a,{to:"/language/interfaces/TokensProviderFactory.html"},{default:e(()=>[s("TokensProviderFactory")]),_:1})])])]),sn,nn]),an,n("ul",null,[ln,n("li",null,[s("参数： "),n("ul",null,[n("li",null,[en,s(": "),l(a,{to:"/language/alias.html#languageSelector"},{default:e(()=>[s("languageSelector")]),_:1})]),n("li",null,[on,s(": "),l(a,{to:"/language/interfaces/TypeDefinitionProvider.html"},{default:e(()=>[s("TypeDefinitionProvider")]),_:1})])])]),n("li",null,[s("返回值： "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1})])]),pn,n("ul",null,[rn,n("li",null,[s("参数： "),n("ul",null,[cn,n("li",null,[tn,s(": "),l(a,{to:"/language/interfaces/LanguageConfiguration.html"},{default:e(()=>[s("LanguageConfiguration")]),_:1})])])]),n("li",null,[s("返回值： "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1})])]),Dn,n("ul",null,[dn,n("li",null,[s("参数： "),n("ul",null,[yn,n("li",null,[un,s(": "),l(a,{to:"/language/interfaces/IMonarchLanguage.html"},{default:e(()=>[s("IMonarchLanguage")]),_:1}),s(" | Thenable<"),l(a,{to:"/language/interfaces/IMonarchLanguage.html"},{default:e(()=>[s("IMonarchLanguage")]),_:1}),s(">`")])])]),n("li",null,[s("返回值： "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1}),s(" 为编辑器设置自定义语法高亮规则。该方法接受两个参数，第一个参数是语言标识符，第二个参数是包含语法规则的对象。 以下是 setMonarchTokensProvider 的一个示例用法：")])]),vn,n("ul",null,[Cn,n("li",null,[s("参数： "),n("ul",null,[gn,n("li",null,[mn,s(": "),l(a,{to:"/language/interfaces/TokensProvider.html"},{default:e(()=>[s("TokensProvider")]),_:1}),s(" | "),l(a,{to:"/language/interfaces/EncodedTokensProvider.html"},{default:e(()=>[s("EncodedTokensProvider")]),_:1}),s(" | Thenable<"),l(a,{to:"/language/interfaces/TokensProvider.html"},{default:e(()=>[s("TokensProvider")]),_:1}),s(" | "),l(a,{to:"/language/interfaces/EncodedTokensProvider.html"},{default:e(()=>[s("EncodedTokensProvider")]),_:1}),s(">`")])])]),n("li",null,[s("返回值： "),l(a,{to:"/global/interfaces/IDisposable.html"},{default:e(()=>[s("IDisposable")]),_:1})])]),bn])}const _n=p(t,[["render",En],["__file","language.html.vue"]]);export{_n as default};
