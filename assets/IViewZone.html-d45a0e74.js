import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as r,c as t,a as e,b as i,d,w as h,e as n}from"./app-39581384.js";const s={},u=e("h1",{id:"iviewzone",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#iviewzone","aria-hidden":"true"},"#"),i(" IViewZone")],-1),m=e("code",null,"interface",-1),f={href:"https://microsoft.github.io/monaco-editor/docs.html#interfaces/editor.BracketPairColorizationOptions.html",target:"_blank",rel:"noopener noreferrer"},p=n('<h2 id="属性-properties" tabindex="-1"><a class="header-anchor" href="#属性-properties" aria-hidden="true">#</a> 属性 Properties</h2><h3 id="aftercolumn" tabindex="-1"><a class="header-anchor" href="#aftercolumn" aria-hidden="true">#</a> afterColumn</h3><ul><li>类型： <code>number</code> <code>可选</code></li><li>默认值： <code>-</code></li><li>可选项： <code>-</code></li><li>描述： <code>该区域应出现在其后的列。如果未设置，将使用 afterLineNumber 的 maxLineColumn。这与换行有关。</code></li></ul><h3 id="aftercolumnaffinity" tabindex="-1"><a class="header-anchor" href="#aftercolumnaffinity" aria-hidden="true">#</a> afterColumnAffinity</h3>',4),_=e("code",null,"可选",-1),x=e("li",null,[i("默认值： "),e("code",null,"none")],-1),b=e("li",null,[i("可选项： "),e("code",null,"-")],-1),g=e("li",null,[i("描述： "),e("code",null,"如果 afterColumn 有多个视图列，亲和力指定使用哪一个。默认为none。")],-1),I=n('<h3 id="afterlinenumber" tabindex="-1"><a class="header-anchor" href="#afterlinenumber" aria-hidden="true">#</a> afterLineNumber</h3><ul><li>类型： <code>number</code></li><li>默认值： <code>-</code></li><li>可选项： <code>-</code></li><li>描述： <code>该区域应出现在其后的行号。使用 0 在第一行号之前放置一个视图区域。</code></li></ul><h3 id="domnode" tabindex="-1"><a class="header-anchor" href="#domnode" aria-hidden="true">#</a> domNode</h3><ul><li>类型： <code>HTMLElement</code></li><li>默认值： <code>-</code></li><li>可选项： <code>-</code></li><li>描述： <code>此视图区域的DOM节点。</code></li></ul><h3 id="heightinlines" tabindex="-1"><a class="header-anchor" href="#heightinlines" aria-hidden="true">#</a> heightInLines</h3><ul><li>类型： <code>number</code> <code>可选</code></li><li>默认值： <code>-</code></li><li>可选项： <code>-</code></li><li>描述： <code>区的行高。如果指定，将使用 heightInPx 代替它。如果既未指定 heightInPx 也未指定 heightInLines，则将选择默认值 heightInLines = 1。</code></li></ul><h3 id="heightinpx" tabindex="-1"><a class="header-anchor" href="#heightinpx" aria-hidden="true">#</a> heightInPx</h3><ul><li>类型： <code>number</code> <code>可选</code></li><li>默认值： <code>-</code></li><li>可选项： <code>-</code></li><li>描述： <code>视图区域的高度（以像素为单位）。如果设置了此项，编辑器将优先考虑它而不是上面的 heightInLines。如果既未指定 heightInPx 也未指定 heightInLines，则将选择默认值 heightInLines = 1。</code></li></ul><h3 id="margindomnode" tabindex="-1"><a class="header-anchor" href="#margindomnode" aria-hidden="true">#</a> marginDomNode</h3><ul><li>类型： <code>HTMLElement</code> <code>可选</code></li><li>默认值： <code>-</code></li><li>可选项： <code>-</code></li><li>描述： <code>此视图区域的边距DOM节点。</code></li></ul><h3 id="minwidthinpx" tabindex="-1"><a class="header-anchor" href="#minwidthinpx" aria-hidden="true">#</a> minWidthInPx</h3><ul><li>类型： <code>number</code> <code>可选</code></li><li>默认值： <code>-</code></li><li>可选项： <code>-</code></li><li>描述： <code>视图区域的最小宽度（以 px 为单位）。如果设置了这个，编辑器将确保滚动宽度 &gt;= 比这个值。</code></li></ul><h3 id="oncomputedheight" tabindex="-1"><a class="header-anchor" href="#oncomputedheight" aria-hidden="true">#</a> onComputedHeight</h3><ul><li>类型： <code>(height: number) =&gt; void</code> <code>可选</code></li><li>默认值： <code>undefined</code></li><li>可选项： <code>-</code></li><li>描述： <code>当视图区域的高度已计算并可用时调用的回调函数。</code></li></ul><h3 id="ondomnodetop" tabindex="-1"><a class="header-anchor" href="#ondomnodetop" aria-hidden="true">#</a> onDomNodeTop</h3><ul><li>类型： <code>(top: number) =&gt; void</code> <code>可选</code></li><li>默认值： <code>undefined</code></li><li>可选项： <code>-</code></li><li>描述： <code>当视图区域的DOM节点的顶部位置已计算并可用时调用的回调函数。</code></li></ul><h3 id="ordinal" tabindex="-1"><a class="header-anchor" href="#ordinal" aria-hidden="true">#</a> ordinal</h3><ul><li>类型： <code>number</code> <code>可选</code></li><li>默认值： <code>-</code></li><li>可选项： <code>-</code></li><li>描述： <code>当多个视图区域想要位于同一行之后时使用的决胜局。默认为 afterColumn 否则为 10000；</code></li></ul><h3 id="showinhiddenareas" tabindex="-1"><a class="header-anchor" href="#showinhiddenareas" aria-hidden="true">#</a> showInHiddenAreas</h3><ul><li>类型： <code>boolean</code> <code>可选</code></li><li>默认值： <code>false</code></li><li>可选项： <code>-</code></li><li>描述： <code>如果为true，则即使编辑器中的文本被折叠，视图区域也将保持可见。</code></li></ul><h3 id="suppressmousedown" tabindex="-1"><a class="header-anchor" href="#suppressmousedown" aria-hidden="true">#</a> suppressMouseDown</h3><ul><li>类型： <code>boolean</code> <code>可选</code></li><li>默认值： <code>false</code></li><li>可选项： <code>-</code></li><li>描述： <code>抑制鼠标按下事件。如果设置，编辑器会将鼠标按下侦听器附加到视图区域并在其上添加 .preventDefault。默认为false</code></li></ul>',22);function w(L,C){const l=o("ExternalLinkIcon"),c=o("RouterLink");return r(),t("div",null,[u,e("p",null,[m,i(),e("a",f,[i("官网地址"),d(l)])]),p,e("ul",null,[e("li",null,[i("类型： "),d(c,{to:"/editor/enumerations.html#positionaffinity"},{default:h(()=>[i("PositionAffinity")]),_:1}),i(),_]),x,b,g]),I])}const v=a(s,[["render",w],["__file","IViewZone.html.vue"]]);export{v as default};
